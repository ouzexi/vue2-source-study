{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalAPI.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const strats = {};\r\nconst LIFECYCLE = ['beforeCreate', 'created'];\r\nLIFECYCLE.forEach(hook => {\r\n    // 比如将组件和mixin的created钩子形成队列 {created: [fn0, fn1, fn2]}\r\n    // 如果mixin（儿子）有 组件（父亲）有 则数组合并\r\n    // 儿子有父亲没有 将儿子包时装成数组\r\n    // 儿子没有 父亲（组件里的created）原封不动即可\r\n    strats[hook] = function(p, c) {\r\n        if(c) {\r\n            if(p) {\r\n                return p.concat(c);\r\n            } else {\r\n                return [c];\r\n            }\r\n        } else {\r\n            return p;\r\n        }\r\n    }\r\n})\r\n\r\nstrats.components = function(parentVal, childVal) {\r\n    // 通过原型链可以获取父组件的全部components\r\n    const res = Object.create(parentVal);\r\n\r\n     // 如果子组件有components选项 则逐项加入（相当于先合并父组件的components 再看子组件，有相同的就覆盖 没有就直接加入）\r\n    if(childVal) {\r\n        for(let key in childVal) {\r\n            res[key] = childVal[key]\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function mergeOptions(parent, child) {\r\n    const options = {};\r\n    for(let key in parent) {\r\n        mergeFields(key);\r\n    }\r\n    for(let key in child) {\r\n        if(!parent.hasOwnProperty(key)) {\r\n            mergeFields(key);\r\n        }\r\n    }\r\n\r\n    function mergeFields(key) {\r\n        // 策略模式（如生命周期钩子 要特殊处理 做成队列）\r\n        if(strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key]);\r\n        } else {\r\n            // 合并选项 优先用子选项 没有则父选项\r\n            options[key] = child[key] || parent[key];\r\n        }\r\n    }\r\n    return options;\r\n}","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    // 静态方法（Vue.mixin）/属性（Vue.options）\r\n    // 默认有一个_base字段保存Vue这样全局构造函数，用来方便后续使用Vue的静态方法如extend等\r\n    Vue.options = {\r\n        _base: Vue\r\n    };\r\n    Vue.mixin = function(mixin) {\r\n        // 将用户传入的选项和全局选项合并\r\n        // 因为Vue.mixin，所以这里的this是Vue，this.options找到全局选项Vue.options\r\n        this.options = mergeOptions(this.options, mixin);\r\n        return this;\r\n    }\r\n\r\n    // 手动创建组件进行挂载\r\n    Vue.extend = function(options) {\r\n        // 根据用户的参数 返回一个构造函数\r\n        // 这个构造函数new的实例 就是组件实例 继承了Vue 所以可以调用init方法\r\n        function Sub(options = {}) {\r\n            this._init(options);\r\n        }\r\n        // Sub.prototype.__proto__ === Vue.prototype\r\n        // 用Object.create创建的对象 指定他的原型 要手动改回他的构造函数\r\n        Sub.prototype = Object.create(Vue.prototype);\r\n        Sub.prototype.constructor = Sub;\r\n\r\n        // 合并用户传递的参数 和 全局的Vue.options\r\n        Sub.options = mergeOptions(Vue.options, options);\r\n        return Sub;\r\n    }\r\n\r\n    // 全局的组件会保存到这里 如 Vue.component('xxx', xxx);\r\n    Vue.options.components = {};\r\n\r\n    Vue.component = function(id, definition) {\r\n        // 如果definition已经是函数 说明已调用Vue.extend生成一个组件构造函数 否则需要自己包装\r\n        definition = typeof definition === 'function' ? definition : Vue.extend(definition);\r\n        Vue.options.components[id] = definition;\r\n    }\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 匹配到的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性 第一个分组就是属性的key value 就是 分组3/分组4/分组5\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 开始标签的结束位置 <div attrs='xxx'> <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n// vue3采用的不是正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    // 存放元素的栈\r\n    const stack = [];\r\n    // 指向栈中最后一个元素\r\n    let currentParent;\r\n    // 根节点\r\n    let root;\r\n\r\n    // 最终需要转化成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        // 创建一个ast节点\r\n        let node = createASTElement(tag, attrs);\r\n        // 如果为空树，则当前节点为树的根节点\r\n        if(!root) {\r\n            root = node;\r\n        }\r\n        // 当前节点的父节点为栈中最后一个节点\r\n        if(currentParent) {\r\n            // 设置当前节点的父节点\r\n            node.parent = currentParent;\r\n            // 同时设置当前节点的父节点的子节点为自身\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        // currentParent指向栈中最后一个\r\n        currentParent = node;\r\n    }\r\n\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '');\r\n        // 文本直接作为当前指向的节点的子元素\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        });\r\n    }\r\n\r\n    function end(tag) {\r\n        // 弹出最后一个（检验标签是否合法-待完成）\r\n        // 此时该节点包括它的子节点的ast树已构造完毕\r\n        let node = stack.pop();\r\n        // 指向该节点的父元素 继续构造\r\n        currentParent = stack[stack.length - 1];\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if(start) {\r\n            const match = {\r\n                // match第一个分组是标签名\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // 匹配到的字符舍弃 继续前进遍历html模板\r\n            advance(start[0].length);\r\n\r\n            // 如果不是开始标签的结束位置 就一直匹配 获取属性<div attr='xxx' />\r\n            let attr, end;\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\r\n            }\r\n            // 前进到结束闭合 > 符号，说明这一个标签上部分已经匹配完 如<div attr='x'>已匹配完 </div>未匹配\r\n            if(end) {\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n        // 否则不是开始标签\r\n        return false;\r\n    }\r\n\r\n    // html最开始肯定是一个<\r\n    while(html) {\r\n        // 如果textEnd为0 则说明是个开始或者自闭合结束标签 <div> / <div />\r\n        // 如果textEnd > 0 则说明是文本的结束位置 </div>\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd === 0) {\r\n            // 开始标签的匹配结果\r\n            const startTagMatch = parseStartTag();\r\n            if(startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            // 结束标签的匹配结果\r\n            const endTagMatch = html.match(endTag)\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        if(textEnd > 0) {\r\n            // console.log(html)\r\n            // 文本内容\r\n            let text = html.substring(0, textEnd);\r\n            if(text) {\r\n                chars(text);\r\n                // 解析完文本后继续前进\r\n                advance(text.length)\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    // {name: value}\r\n    let str = '';\r\n    for(let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if(attr.name === 'style') {\r\n            // color: red; background: red; => { color: 'red', background: 'red' }\r\n            let obj = {};\r\n            // qs库也可以实现\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        // id: 'app', style: '{color: 'red'}, '\r\n        str += `${attr.name}: ${JSON.stringify(attr.value)},`\r\n    }\r\n    // 删除最后一个逗号 {id: 'app', style: '{color: 'red'}}\r\n    return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\n// {{ name }} 匹配到的内容就是表达式的变量\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nfunction gen(node) {\r\n    // 元素节点\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本节点\r\n        let text = node.text;\r\n        if(!defaultTagRE.test(text)) {\r\n            // 普通文本 返回_v('str')\r\n            return `_v(${JSON.stringify(text)})`;\r\n        } else {\r\n            // 变量 返回 _v(_s(name) + 'hello' + _s(age))\r\n            // 存放字符的数组[{{name}}, 'hello', {{age}}]\r\n            let tokens = [];\r\n            // 每次匹配到的字符\r\n            let match;\r\n            // 如果 regexp.exec 匹配成功，lastIndex会被设置为紧随最近一次成功匹配的下一个位置，所以每次匹配要重置为0\r\n            defaultTagRE.lastIndex = 0;\r\n            // 最后一次匹配成功的下标\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)) {\r\n                // {{name}} hello {{age}} hello \r\n                // 匹配到的下标\r\n                let index = match.index;\r\n                if(index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n                }\r\n                // match[0] -> {{name}} / match[1] -> name\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            // 匹配完后，还可能存在普通字符\r\n            if(lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join('+')})`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children ? children.map(child => gen(child)).join(',') : '';\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    // console.log(\"🚀 ~ file: index.js:73 ~ codegen ~ children:\", children)\r\n    // _c('div', {id: 'app'}, _v(_s(name) + 'hello'))\r\n    let code = (`_c('${ast.tag}', ${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `, ${children}` : ''})`);\r\n    return code;\r\n}\r\n\r\n// 对模板进行编译处理\r\nexport function compileToFunction(template) {\r\n    // 1、将template转化成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 2、生成render方法（render方法执行后的返回的结果就是虚拟DOM）\r\n    let code = codegen(ast);\r\n    \r\n    // 将this指向当前实例vm 就可以访问当前实例的name、age\r\n    code = `with(this) {return ${code}}`;\r\n    let render = new Function(code);\r\n    // 生成render函数\r\n    return render;\r\n}","// 每个属性对应一个id\r\n// 一个属性对象多个watcher（视图） 因为一个属性可以在多个组件存在\r\nlet id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        // 属性的dep要收集watcher\r\n        this.id = id++;\r\n        // 存放当前属性对应的watcher有哪些\r\n        this.subs = [];\r\n    }\r\n\r\n    // dep和watcher是多对多关系\r\n    // 一个属性可以在多个组件中使用 - 一个dep对应多个watcher\r\n    // 一个组件存在多个属性 - 一个watcher对应多个dep\r\n    // 所以建立双向关系 dep调用depend时当前watcher（组件/视图）会把这个dep存起来\r\n    // 同时这个dep会调用addSub把当前watcher也存起来\r\n    depend() {\r\n        Dep.target.addDep(this);\r\n    }\r\n\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n\r\n    // 属性修改时，会通知使用到这个属性的视图进行更新操作\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update());\r\n    }\r\n}\r\n\r\nDep.target = null;\r\n// 用一个栈维护多个watcher（包括计算属性watcher、渲染watcher）\r\nlet stack = [];\r\n\r\nexport function pushTarget(watcher) {\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\n\r\nexport function popTarget() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;","// 一个视图（组件）对应一个watcher\r\n\r\nimport Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\n/* \r\n    1）当创建渲染watcher时会把当前渲染的watcher对象赋值到Dep.target上\r\n    2）调用_render会取值 走到get上\r\n    每个属性有一个dep（属性就是被观察者），watcher就是观察者（属性变化后会通知观察者更新） --- 观察者模式\r\n*/\r\n\r\nlet id = 0;\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, options, cb) {\r\n        this.id = id++;\r\n        // 表示是一个渲染watcher\r\n        this.renderWatcher = options;\r\n\r\n        // getter表示调用这个函数可以发生取值操作\r\n        // watch可以传入字符串 取methods中的函数\r\n        if(typeof exprOrFn === 'string') {\r\n            this.getter = function() { return vm[exprOrFn]; }\r\n        } else {\r\n            this.getter = exprOrFn;\r\n        }\r\n\r\n        // 实现计算属性和进行一些清理工作需要用到\r\n        this.deps = [];\r\n        // 每个属性的dep对应一个depId，避免重复收集\r\n        this.depsId = new Set();\r\n        this.vm = vm;\r\n        // 计算属性watcher传入的缓存标记\r\n        this.lazy = options.lazy;\r\n        this.dirty = this.lazy;\r\n        this.cb = cb;\r\n        this.user = options.user;\r\n        // 如果是计算属性watcher 创建实例时不会自动触发\r\n        this.value = this.lazy ? undefined : this.get();\r\n    }\r\n\r\n    addDep(dep) {\r\n        // 一个组件对应多个属性 重复的属性不用记录 比如 <div>{{name}} {{age}} {{name}} {{name}}</div>\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            // watcher已经记住dep并且去重了，此时让dep也记住watcher\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n\r\n    // 计算属性执行getter得到计算属性的值\r\n    evaluate() {\r\n        // 获取到getter的返回值 同时标识数据不脏了\r\n        this.value = this.get();\r\n        this.dirty = false;\r\n    }\r\n\r\n    get() {\r\n        // 将收集器的目标设置为当前视图\r\n        pushTarget(this);\r\n        // 调用getter即vm._update(vm._render)会调用render方法生成虚拟dom\r\n        // render方法会在vm上取值如vm.name vm.age\r\n        // 此时触发属性的dep收集依赖\r\n        let value = this.getter.call(this.vm);\r\n        // render渲染完毕后重置\r\n        popTarget();\r\n        return value;\r\n    }\r\n\r\n    // 让计算属性watcher中deps中的每个依赖属性dep去收集当前计算属性所在的渲染watcher\r\n    depend() {\r\n        let i = this.deps.length;\r\n        while(i--) {\r\n            this.deps[i].depend();\r\n        }\r\n    }\r\n\r\n    update() {\r\n        console.log('update...', this)\r\n        if(this.lazy) {\r\n            // 如果是计算属性watcher 依赖的值变化 就标识计算属性为脏值\r\n            this.dirty = true;\r\n        } else {\r\n            // 当前视图多个属性多次改变时，update会触发多次\r\n            // 把当前的watcher暂存起来 实现批量刷新 这样update无论触发多少次 视图更新只调用一次\r\n            queueWatcher(this);\r\n        }\r\n    }\r\n\r\n    run() {\r\n        // 保存上一次的旧值 给watch使用\r\n        let oldValue = this.value;\r\n        // 渲染时使用最新的vm来渲染\r\n        // 比如vm.name = 20; vm = name = 12; name多次赋值后，取的是最后一次\r\n        let newValue = this.get();\r\n        // 如果是watch的watcher触发 则调用回调\r\n        if(this.user) {\r\n            this.cb.call(this.vm, newValue, oldValue);\r\n        }\r\n    }\r\n}\r\n\r\n// 记录需要更新的watcher（视图/组件）\r\nlet queue = [];\r\n// 记录当前视图是否已存在于更新队列 去重\r\nlet has = {};\r\n// 防抖\r\nlet pending = false;\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    // 重置\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n    // 在执行的过程中可能还有新的watcher 重新放到queue中\r\n    flushQueue.forEach(q => q.run());\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if(!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 批量执行更新 不管update执行多少次 最终只执行一轮刷新操作（是第一次开启的）\r\n        if(!pending) {\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\n// nextTick收集的回调函数队列\r\nlet callbacks = [];\r\n// 只在第一次触发nextTick开启 就能保证只开启一次异步操作 队列执行完后重置\r\nlet waiting = false;\r\n// 批量执行\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0);\r\n    // 重置\r\n    waiting = false;\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb());\r\n}\r\n\r\n// nextTick采用优雅降级的方式\r\nlet timerFunc;\r\nif(Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks);\r\n    }\r\n} else if(MutationObserver) {\r\n    // 传入的回调函数是异步执行的\r\n    let observer = new MutationObserver(flushCallbacks);\r\n    let textNode = document.createTextNode(1);\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    });\r\n    timerFunc = () => {\r\n        // 元素变化会执行MutationObserver回调\r\n        textNode.textContent = 2;\r\n    }\r\n} else if(setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks);\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks);\r\n    }\r\n}\r\n\r\n// 批量执行，一般是用一个waiting变量控制，第一次触发开启一个异步事件，之后收集全部函数，同步代码执行完后，最后异步批量执行\r\n// 注意：nextTick不是异步的，他只是收集回调队列，开启异步执行队列\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb);\r\n    if(!waiting) {\r\n        timerFunc();\r\n        waiting = true;\r\n    }\r\n}\r\n\r\nexport default Watcher;","// 判断是原生标签还是自定义组件\r\nconst isReservedTag = (tag) => {\r\n    return ['a', 'div', 'p', 'button', 'ul', 'li', 'span'].includes(tag)\r\n}\r\n\r\n// _h() _c() 传入实例 标签名 标签属性 子节点\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if(data == null) data = {};\r\n    let key = data.key;\r\n    if(key) {\r\n        delete data.key;\r\n    }\r\n    // 如果是原生标签直接创建虚拟节点 否则创建组件虚拟节点\r\n    if(isReservedTag(tag)) {\r\n        return vnode(vm, tag, key, data, children);\r\n    } else {\r\n        // 获取对应的组件定义 可能为Sub类 也可能为选项对象（components: { {template: 'xxxx'} }）\r\n        let Ctor = vm.$options.components[tag];\r\n        return createComponentVnode(vm, tag, key, data, children, Ctor);\r\n    }\r\n}\r\n\r\nfunction createComponentVnode(vm, tag, key, data, children, Ctor) {\r\n    if(typeof Ctor === 'object') {\r\n        // Vue.options默认有_base字段保存Vue全局构造函数\r\n        // 可以借用它的extend静态方法生成Sub构造函数\r\n        Ctor = vm.$options._base.extend(Ctor);\r\n    }\r\n    // 给组件虚拟节点的props添加一个hook属性\r\n    data.hook = {\r\n        // 创建真实节点时 如果是组件则调用此init方法创建\r\n        // 保存组件的实例到虚拟节点上\r\n        init(vnode) {\r\n            let instance = vnode.componentInstance = new vnode.componentOptions.Ctor;\r\n            instance.$mount();\r\n        }\r\n    }\r\n    return vnode(vm, tag, key, data, children, null, { Ctor })\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// ast是语法层面的转化 描述的是语法本身 可以描述js css html\r\n// 虚拟dom描述的是dom元素 可以为dom增加一些自定义属性\r\nfunction vnode(vm, tag, key, data, children, text, componentOptions) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        componentOptions    // 如果是自定义组件不是原生标签，则componentOptions存有组件的构造函数\r\n    }\r\n}\r\n\r\nexport function isSameVNode(vnode1, vnode2) {\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}","import { isSameVNode } from \"./index\";\r\n\r\nfunction patchProps(el, oldProps = {}, props = {}) {\r\n    // 某个属性 老节点中有 新节点中没有 要删除老的\r\n    let oldStyles = oldProps.style || {};\r\n    let newStyles = props.style || {};\r\n    // 老节点样式中有 新的没有 要把样式去掉\r\n    for(let key in oldStyles) {\r\n        if(!newStyles[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n\r\n    // 比较其他新老属性\r\n    for(let key in oldProps) {\r\n        if(!props[key]) {\r\n            el.removeAttribute(key);\r\n        }\r\n    }\r\n\r\n    for(let key in props) {\r\n        if(key === 'style') {\r\n            for(let styleName in props['style']) {\r\n                el.style[styleName] = props['style'][styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createComponent(vnode) {\r\n    let i = vnode.data;\r\n    // 只有自定义组件的props上有hook属性而且hook对象里存在init方法 而原生的props没有\r\n    // 调用hook.init方法生成Sub实例并挂载\r\n    if((i = i.hook) && (i = i.init)) {\r\n        i(vnode);\r\n    }\r\n    // 只有自定义组件的vnode才会在调用hook.init时添加componentInstance属性，并且它的值为对应的Sub实例\r\n    // 所以如果vnode有componentInstance属性则为组件\r\n    if(vnode.componentInstance) {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    // 标签元素\r\n    if(typeof tag === 'string') {\r\n        // 先判断是组件还是原生元素\r\n        // 是组件则返回对应的真实节点\r\n        if(createComponent(vnode)) {\r\n            return vnode.componentInstance.$el;\r\n        }\r\n\r\n        // vnode增加el属性，将虚拟dom和真实dom对应起来，方便后续修改props属性\r\n        vnode.el = document.createElement(tag);\r\n        patchProps(vnode.el, {}, data);\r\n        children.forEach(child => {\r\n            const childElm = createElm(child);\r\n            vnode.el.appendChild(childElm);\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\n// 初始化的时候，oldVNode是真实dom 更新时是上一次虚拟DOM\r\nexport function patch(oldVNode, vnode) {\r\n    // 如果是自定义组件第一次生成时 那么它调用vnode.hook.init方法的$mount方法挂载时 不会传入需要挂载的父节点\r\n    // 返回自定义组件对应的渲染结果\r\n    if(!oldVNode) {\r\n        return createElm(vnode);\r\n    }\r\n\r\n    // nodeType是dom元素原生属性\r\n    const isRealElement = oldVNode.nodeType;\r\n    if(isRealElement) {\r\n        // 获取真实dom\r\n        const elm = oldVNode;\r\n        // 获取父元素\r\n        const parentElm = elm.parentNode;\r\n        // 根据虚拟dom创建真实dom\r\n        let newElm = createElm(vnode);\r\n        // 插入到原节点的相邻节点\r\n        parentElm.insertBefore(newElm, elm.nextSibling);\r\n        // 移除原节点\r\n        parentElm.removeChild(elm);\r\n\r\n        return newElm;\r\n    } else {\r\n        // diff算法（平级比较）\r\n        // 1、两个节点不是同一个节点 直接删除老的换上新的 （无需对比）\r\n        // 2、两个节点是同一个节点（判断tag和key） 比较两个节点的属性是否有差异（复用老的节点，将差异的属性更新）\r\n        // 3、节点比较完毕后需要比较两个节点的子节点\r\n        return patchVnode(oldVNode, vnode);\r\n    }\r\n}\r\n\r\nfunction patchVnode(oldVNode, vnode) {\r\n    if(!isSameVNode(oldVNode, vnode)) {\r\n        // 新的替换老的\r\n        let el = createElm(vnode);\r\n        oldVNode.el.parentNode.replaceChild(el, oldVNode.el);\r\n        return el;\r\n    }\r\n    // 文本的情况(文本的tag和key都为undefined) 比较文本的内容\r\n    // 复用老节点的元素 无需新创建dom\r\n    let el = vnode.el = oldVNode.el;\r\n    // 都是文本\r\n    if(!oldVNode.tag) {\r\n        if(oldVNode.text !== vnode.text) {\r\n            // 用新的文本覆盖老的文本\r\n            el.textContent = vnode.text;\r\n        }\r\n    }\r\n    // 比对标签的属性\r\n    patchProps(el, oldVNode.data, vnode.data);\r\n\r\n    // 比较儿子节点 需要考虑 一方有儿子&一方没儿子 或 两方都有儿子\r\n    let oldChildren = oldVNode.children || [];\r\n    let newChildren = vnode.children || [];\r\n\r\n    // 两方都有儿子\r\n    if(oldChildren.length > 0 && newChildren.length > 0) {\r\n        updateChildren(el, oldChildren, newChildren);\r\n    }\r\n    // 老节点没有儿子 新节点有 直接插入儿子\r\n    else if(newChildren.length > 0) {\r\n        mountChildren(el, newChildren);\r\n    }\r\n    // 新节点没有儿子 老节点有 直接删除儿子\r\n    else if(oldChildren.length > 0) {\r\n        // 可以循环 removeChild\r\n        el.innerHTML = '';\r\n    }\r\n    return el;\r\n}\r\n\r\nfunction mountChildren(el, newChildren) {\r\n    for(let i = 0; i < newChildren.length; i++) {\r\n        let child = newChildren[i];\r\n        el.appendChild(createElm(child));\r\n    }\r\n}\r\n\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    // 双指针比较两个节点 新头-旧头 新尾-旧尾 当头指针超过尾指针时结束\r\n    let oldStartIndex = 0;\r\n    let newStartIndex = 0;\r\n    let oldEndIndex = oldChildren.length - 1;\r\n    let newEndIndex = newChildren.length - 1;\r\n\r\n    let oldStartVnode = oldChildren[oldStartIndex];\r\n    let newStartVnode = newChildren[newStartIndex];\r\n\r\n    let oldEndVnode = oldChildren[oldEndIndex];\r\n    let newEndVnode = newChildren[newEndIndex];\r\n\r\n    // 将老节点的子节点做映射表\r\n    function makeIndexByKey(children) {\r\n        let map = {};\r\n        children.forEach((child, index) => {\r\n            map[child.key] = index;\r\n        });\r\n        return map;\r\n    }\r\n\r\n    let map = makeIndexByKey(oldChildren);\r\n\r\n    // 思考 循环为什么要加key\r\n    // 新老节点双方有一方头指针大于尾指针则停止循环\r\n    while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n        // 因为可能被标记过 设置为undefined 需要跳过\r\n        if(!oldStartVnode) {\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n        }\r\n        // 因为可能被标记过 \r\n        else if(!oldEndVnode) {\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n        }\r\n        // 头头比对\r\n        else if(isSameVNode(oldStartVnode, newStartVnode)) {\r\n            patchVnode(oldStartVnode, newStartVnode);\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n        // 尾尾比对\r\n        else if(isSameVNode(oldEndVnode, newEndVnode)) {\r\n            patchVnode(oldEndVnode, newEndVnode);\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }\r\n        // 尾头比对\r\n        else if(isSameVNode(oldEndVnode, newStartVnode)) {\r\n            patchVnode(oldEndVnode, newStartVnode);\r\n            // 新的头节点 与 老的尾节点 相同，复用老节点 移到头部 \r\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el);\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n        // 头尾比对\r\n        else if(isSameVNode(oldStartVnode, newEndVnode)) {\r\n            patchVnode(oldStartVnode, newEndVnode);\r\n            // 新的尾节点 与 老的头节点 相同，复用老节点 移到尾部\r\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\r\n        }\r\n        // 乱序比对\r\n        // 在给动态列表添加key的时候 要尽量避免使用索引 因为索引前后都是从0开始 会发生错误复用\r\n        // 根据老的节点列表做一个映射关系 用新节点去遍历寻找 若找到则移动至头部（因为新节点从头部遍历） 找不到则添加 最后多余的老节点则删除\r\n        else {\r\n            let moveIndex = map[newStartVnode.key];\r\n            // 在老节点映射表中找到对应虚拟节点 则复用\r\n            if(moveIndex !== undefined) {\r\n                let moveVnode = oldChildren[moveIndex];\r\n                el.insertBefore(moveVnode.el, oldStartVnode.el);\r\n                // 表示该节点已做移动处理 不能再比较复用\r\n                oldChildren[moveIndex] = undefined;\r\n                patchVnode(moveVnode, newStartVnode);\r\n            }\r\n            // 找不到则添加至头部\r\n            else {\r\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n            }\r\n            // 当前新节点处理完毕 到下一个\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n    }\r\n    // 老节点列表遍历完毕 新节点列表还未遍历完毕 则把多余的新节点插入\r\n    if(newStartIndex <= newEndIndex) {\r\n        for(let i = newStartIndex; i <= newEndIndex; i++) {\r\n            let childEl = createElm(newChildren[i]);\r\n            // 这里可能向后追加 也可能是向前追加（尾尾比对的情况）\r\n            // 判断方法是 新节点列表end下标后是否有下一个节点 有则头插 无则尾插 \r\n            // 所以使用insertBefore代替appendChild 它第二个参数为null时相当于appendChild\r\n            let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null;\r\n            el.insertBefore(childEl, anchor);\r\n        }\r\n    }\r\n    // 新节点列表遍历完毕 老节点列表还未遍历完毕 则把多余的老节点删除\r\n    if(oldStartIndex <= oldEndIndex) {\r\n        for(let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n            // 未被做移动处理的老节点才删除\r\n            if(oldChildren[i]) {\r\n                let childEl = oldChildren[i].el;\r\n                el.removeChild(childEl);\r\n            }\r\n        }\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom/index\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function(vnode) {\r\n        const vm = this;\r\n        const el = vm.$el;\r\n        // 第一次产生的虚拟节点保存到_vnode属性上 之后更新时就可以在vm实例上获取到\r\n        const prevVnode = vm._vnode;\r\n        vm._vnode = vnode;\r\n        // patch既有初始化的功能 又有更新的功能\r\n        // 如果有_vnode属性 说明是更新虚拟节点 否则说明是第一次产生\r\n        if(prevVnode) {\r\n            vm.$el = patch(prevVnode, vnode);\r\n        } else {\r\n            vm.$el = patch(el, vnode);\r\n        }\r\n    }\r\n\r\n    // _c('div', {}, ...children)\r\n    Vue.prototype._c = function() {\r\n        return createElementVNode(this, ...arguments);\r\n    }\r\n\r\n    // _v(text)\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this, ...arguments);\r\n    }\r\n\r\n    Vue.prototype._s = function(value) {\r\n        if(typeof value !== 'object') return value;\r\n        return JSON.stringify(value);\r\n    }\r\n\r\n    Vue.prototype._render = function() {\r\n        // 当渲染时会去实例中取值，可以将属性和视图绑定\r\n        const vm = this;\r\n        // 执行render方法，生成虚拟DOM\r\n        return vm.$options.render.call(this);\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    // $el为querySelector获取的真实DOM\r\n    vm.$el = el;\r\n    // 1、调用render方法生成虚拟节点 虚拟DOM\r\n    const updateComponent = () => {\r\n        vm._update(vm._render());\r\n    }\r\n    const watcher = new Watcher(vm, updateComponent, true);\r\n    // 2、根据虚拟DOM生成真实DOM\r\n    // 3、插入到el元素中\r\n}\r\n\r\n// vue核心 \r\n// 1）创造了响应式数据\r\n// 2）模板转换成ast语法树\r\n// 3）将ast语法树转换成render函数\r\n// 4）后续每次更新可以只执行render函数（无需再执行ast转化的过程）\r\n\r\nexport function callHook(vm, hook) {\r\n    // 此时vm.$options是全局选项和实例选项合并的结果\r\n    // 所以包含mixin的钩子形成一个队列{create: [fn0, fn1, fn2]}\r\n    const handlers = vm.$options[hook];\r\n    if(handlers) {\r\n        handlers.forEach(handler => handler.call(vm));\r\n    }\r\n}","// 保留数组的原型\r\nlet oldArrayProto = Array.prototype;\r\n// 以数组的原型作为原型创建新的原型对象（newArrayProto.__proto__ = oldArrayProto），\r\n// 这样重写的方法只会存在newArrayProto上，不会污染oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\n// 需重写的7个变异方法\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'];\r\nmethods.forEach(method => {\r\n    // 重写的方法挂载到newArrayProto上\r\n    newArrayProto[method] = function(...args) {\r\n        // 内部调用原来的方法，面向切片编程\r\n        // 如 arr.push(1, 2, 3)，this为arr，args为[1, 2, 3]\r\n        const result = oldArrayProto[method].call(this, ...args);\r\n\r\n        // 获取数组新增的数据\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                // 如新增元素时，只需获取第2个下标后的数据：arr.splice(0, 1, {a: 1}, {b: 2})\r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // 对新增的数据再次进行劫持\r\n        if(inserted) {\r\n            ob.observeArray(inserted);\r\n        }\r\n\r\n        // 数组本身变化 通知对应的watcher更新视图\r\n        ob.dep.notify();\r\n\r\n        return result;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observer {\r\n    // Object.defineProperty只能劫持已经存在的属性（vue里面会为此单独写一些api $set $delete）\r\n    constructor(data) {\r\n\r\n        // 给每个对象（对象包括数组）增加收集功能 这样当实例的属性为数组/对象时，对应的数组/对象也会收集依赖\r\n        // 比如vm.arr = [1, 2, 3]，此时vm.arr = [4, 5]会触发视图更新，但是vm.arr.push(6)不会触发更新\r\n        // 因为vm.arr对应的这个数组本身没有收集依赖，所以现在要加上dep收集依赖，在调用7个变异方法后调用notify通知视图更新\r\n        // 同样地，vm.obj = {a: 1} -> vm.obj.b = 2 obj对应的对象本身也需要收集依赖，但是新增b属性时不会触发更新\r\n        // 因为没有调用notify通知更新，可以使用$set更新\r\n        this.dep = new Dep();\r\n\r\n        // 需要给对象添加一个__ob__属性，赋值为this，有2个作用\r\n        // 1、数组对新增的数据再次进行劫持，需要调用this的observeArray方法\r\n        // 2、如果一个对象存在Observer类型的__ob__属性，说明被劫持过了，就不需要再被劫持了\r\n        // 另外，需要设置__ob__属性为不可枚举，否则遍历到__ob__属性为一个对象，会被调用observe方法劫持，又给它本身挂载一个__ob__属性，死循环。\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        });\r\n        \r\n        if(Array.isArray(data)) {\r\n            // 数组项一旦多了，每个项都劫持对性能不好，所以重写数组中7个变异方法，是可以修改数组本身\r\n            \r\n            // 需要保留数组原有的特性，并且重写部分方法\r\n            data.__proto__ = newArrayProto;\r\n            // 如果数组中存在属性是对象，可以监听到对象的变化\r\n            this.observeArray(data);\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n    }\r\n\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\n// 对象的属性或数组的项也可能是对象/数组，深层次嵌套递归使对象/数组本身收集依赖，使其改变时可以调用notify更新视图\r\nfunction dependArray(value) {\r\n    for(let i = 0; i < value.length; i++) {\r\n        let current = value[i];\r\n        current.__ob__ && current.__ob__.dep.depend();\r\n        if(Array.isArray(current)) {\r\n            dependArray(current);\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    // 属性的属性也可能是对象，需要递归劫持\r\n    let childOb = observe(value);\r\n    // 这里的value相当于全局的闭包，let value = null\r\n\r\n    // 每个属性都有一个Dep对象\r\n    let dep = new Dep();\r\n\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            if(Dep.target) {\r\n                // 让这个属性的收集器dep记住当前的watcher\r\n                // 同时当前的watcher会记住这个属性的收集器\r\n                dep.depend();\r\n                // 同样地，属性的属性如果是对象/数组的话，本身也要实现依赖收集\r\n                if(childOb) {\r\n                    childOb.dep.depend();\r\n                    if(Array.isArray(value)) {\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newVal) {\r\n            if(newVal === value) return\r\n            // 如果设置的新值是对象的话，也要进行劫持后再赋值\r\n            observe(newVal)\r\n            value = newVal\r\n\r\n            // 属性变化，通知视图更新\r\n            dep.notify();\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 只对对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例判断是否被劫持过）\r\n    if(data.__ob__ instanceof Observer) {\r\n        return data.__ob__;\r\n    }\r\n    \r\n    return new Observer(data)\r\n}","import Dep from './observe/dep.js';\r\nimport { observe } from './observe/index'\r\nimport Watcher, { nextTick } from './observe/watcher.js';\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if(opts.data) {\r\n        initData(vm);\r\n    }\r\n    if(opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if(opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // data可能是函数或者对象\r\n    data = typeof data === 'function' ? data.call(vm) : data;\r\n    \r\n    // 将返回的对象放到了vue实例的_data属性上\r\n    vm._data = data\r\n    // 对数据进行劫持，vue采用了defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data用vm代理就无须通过vm._data.xxx获取，而是vm.xxx直接获取\r\n    for(let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed;\r\n    // 将计算属性watcher保存到vm上\r\n    const watchers = vm._computedWatchers = {};\r\n    for(let key in computed) {\r\n        let userDef = computed[key];\r\n        // 获取计算属性中get\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get;\r\n\r\n        // 每个计算属性创建一个计算属性watcher lasy: true表示默认不会执行计算属性的get方法（有缓存功能）\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true });\r\n        \r\n        defineComputed(vm, key, userDef);\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    const setter = userDef.set || (() => {});\r\n    // 通过实例获取对应的属性\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    })\r\n}\r\n\r\n// 计算属性不会收集依赖，只会让自己的依赖属性去收集依赖（即计算属性watcher中的deps中的每个dep会depend这个计算属性所在的渲染watcher）\r\nfunction createComputedGetter(key) {\r\n    // 判断是否需要执行getter\r\n    return function() {\r\n        // 获取该计算属性对应的watcher\r\n        const watcher = this._computedWatchers[key];\r\n        if(watcher.dirty) {\r\n            // 如果是脏的就执行\r\n            // 执行后dirty不脏了，下次就不会执行\r\n            watcher.evaluate();\r\n        }\r\n        // 计算属性执行后出栈 此时Dep.target为渲染watcher 需要让计算属性中所依赖的属性也去收集该渲染watcher\r\n        // 否则依赖的属性的subs中没有渲染watcher，修改它们时不会更新视图\r\n        // 如fullName = firstName + lastName 这时firstName和lastName属于fullName计算属性watcher中的deps中收集的dep，他们2个会收集渲染watcher\r\n        if(Dep.target) {\r\n            watcher.depend();\r\n        }\r\n        return watcher.value;\r\n    }\r\n}\r\n\r\nfunction initWatch(vm) {\r\n    const watch = vm.$options.watch;\r\n    for(let key in watch) {\r\n        // 可能是字符串 数组 函数\r\n        const handler = watch[key];\r\n        if(Array.isArray(handler)) {\r\n            for(let i = 0; i < handler.length; i++) {\r\n                createWatcher(vm, key, handler[i]);\r\n            }\r\n        } else {\r\n            createWatcher(vm, key, handler);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createWatcher(vm, key, handler) {\r\n    // 字符串 或 函数\r\n    if(typeof handler === 'string') {\r\n        // 从methods中获取\r\n        handler = vm[handler];\r\n    }\r\n    return vm.$watch(key, handler);\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n\r\n    // watch多种形式最终都是调用这个方法\r\n    Vue.prototype.$watch = function(exprOrFn, cb) {\r\n        // firstname / () => vm.firstname\r\n        // firstname的值变化了 直接执行cb函数即可\r\n        new Watcher(this, exprOrFn, { user: true }, cb);\r\n    } \r\n}","import { compileToFunction } from './compiler/index.js';\r\nimport { callHook, mountComponent } from './lifecycle.js';\r\nimport { initState } from './state.js';\r\nimport { mergeOptions } from './utils.js';\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function(options) { // 用于初始化操作\r\n        // vm.$options 就是获取用户的配置$nextTick $data $attr ...\r\n        const vm = this;\r\n        \r\n        // this是Vue的实例vm，所以this.constructor是Vue，this.constructor.options是Vue.options\r\n        // 将全局选项和实例的选项合并\r\n        vm.$options = mergeOptions(this.constructor.options, options);\r\n\r\n        // 触发生命周期钩子\r\n        callHook(vm, 'beforeCreate');\r\n        // 初始化状态\r\n        initState(vm);\r\n        callHook(vm, 'created');\r\n\r\n        // 实现数据挂载到元素\r\n        if(options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        // 先查找有无render函数\r\n        if(!ops.render) {\r\n            // 没有render函数，查找有无template\r\n            let template;\r\n            // 没有template模板，但是有el元素\r\n            if(!ops.template && el) {\r\n                template = el.outerHTML;\r\n            } else {\r\n                // 有template模板，使用template模板（不一定需要有el，比如自定义组件$mount的时候不需要传入el）\r\n                template = ops.template;\r\n            }\r\n            // 获取到template 需要对模板进行编译\r\n            if(template) {\r\n                const render = compileToFunction(template);\r\n                // 模板编译后转化成render函数 挂载到实例上\r\n                ops.render = render;\r\n            }\r\n        }\r\n        // 组件的挂载，将vm实例挂载到el上\r\n        mountComponent(vm, el)\r\n\r\n        // script标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n        // runtime 和 runtimeWithCompiler的区别就是多了一个compileToFunction步骤\r\n        // 所以runtime是不包含模板编译的 整个编译是打包通过vue-loader转义.vue文件\r\n        // 所以使用vue.runtime.js不能编译选项的template属性\r\n    }\r\n}","import { initGlobalAPI } from \"./globalAPI\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\n\r\n// Vue构造函数\r\nfunction Vue(options) {\r\n    this._init(options)\r\n}\r\n\r\n // 扩展了init方法\r\ninitMixin(Vue);\r\ninitLifeCycle(Vue);\r\ninitGlobalAPI(Vue);\r\n// 实现nextTick $watch\r\ninitStateMixin(Vue);\r\n\r\nexport default Vue;"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","components","parentVal","childVal","res","Object","create","key","mergeOptions","parent","child","options","mergeFields","hasOwnProperty","initGlobalAPI","Vue","_base","mixin","extend","Sub","arguments","length","undefined","_init","prototype","constructor","component","id","definition","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","start","node","push","chars","text","replace","end","pop","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","item","_item$split","_item$split2","_slicedToArray","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","pushTarget","popTarget","Watcher","vm","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","get","dep","has","add","evaluate","call","console","log","queueWatcher","run","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","isReservedTag","includes","createElementVNode","data","_len","Array","_key","vnode","Ctor","$options","createComponentVnode","_typeof","init","instance","componentInstance","componentOptions","$mount","createTextVNode","isSameVNode","vnode1","vnode2","patchProps","el","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","createComponent","createElm","$el","createElement","childElm","appendChild","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","initLifeCycle","_update","prevVnode","_vnode","_c","apply","_v","_s","_render","mountComponent","updateComponent","callHook","handlers","handler","oldArrayProto","newArrayProto","methods","method","_oldArrayProto$method","args","result","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","current","childOb","set","newVal","initState","opts","initData","computed","initComputed","watch","initWatch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","createWatcher","$watch","initStateMixin","$nextTick","initMixin","querySelector","ops","outerHTML"],"mappings":"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"}