{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 匹配到的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性 第一个分组就是属性的key value 就是 分组3/分组4/分组5\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 开始标签的结束位置 <div attrs='xxx'> <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n// vue3采用的不是正则\r\n// 对模板进行编译处理\r\nfunction parseHTML(html) {\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    // 存放元素的栈\r\n    const stack = [];\r\n    // 指向栈中最后一个元素\r\n    let currentParent;\r\n    // 根节点\r\n    let root;\r\n\r\n    // 最终需要转化成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        // 创建一个ast节点\r\n        let node = createASTElement(tag, attrs);\r\n        // 如果为空树，则当前节点为树的根节点\r\n        if(!root) {\r\n            root = node;\r\n        }\r\n        // 当前节点的父节点为栈中最后一个节点\r\n        if(currentParent) {\r\n            // 设置当前节点的父节点\r\n            node.parent = currentParent;\r\n            // 同时设置当前节点的父节点的子节点为自身\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        // currentParent指向栈中最后一个\r\n        currentParent = node;\r\n    }\r\n\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '');\r\n        // 文本直接作为当前指向的节点的子元素\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        });\r\n    }\r\n\r\n    function end(tag) {\r\n        // 弹出最后一个（检验标签是否合法-待完成）\r\n        // 此时该节点包括它的子节点的ast树已构造完毕\r\n        let node = stack.pop();\r\n        // 指向该节点的父元素 继续构造\r\n        currentParent = stack[stack.length - 1];\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if(start) {\r\n            const match = {\r\n                // match第一个分组是标签名\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // 匹配到的字符舍弃 继续前进遍历html模板\r\n            advance(start[0].length);\r\n\r\n            // 如果不是开始标签的结束位置 就一直匹配 获取属性<div attr='xxx' />\r\n            let attr, end;\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\r\n            }\r\n            // 前进到结束闭合 > 符号，说明这一个标签上部分已经匹配完 如<div attr='x'>已匹配完 </div>未匹配\r\n            if(end) {\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n        // 否则不是开始标签\r\n        return false;\r\n    }\r\n\r\n    // html最开始肯定是一个<\r\n    while(html) {\r\n        // 如果textEnd为0 则说明是个开始或者自闭合结束标签 <div> / <div />\r\n        // 如果textEnd > 0 则说明是文本的结束位置 </div>\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd === 0) {\r\n            // 开始标签的匹配结果\r\n            const startTagMatch = parseStartTag();\r\n            if(startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            // 结束标签的匹配结果\r\n            const endTagMatch = html.match(endTag)\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        if(textEnd > 0) {\r\n            console.log(html)\r\n            // 文本内容\r\n            let text = html.substring(0, textEnd);\r\n            if(text) {\r\n                chars(text);\r\n                // 解析完文本后继续前进\r\n                advance(text.length)\r\n            }\r\n        }\r\n    }\r\n    console.log(root)\r\n    return root;\r\n}\r\n\r\n// 对模板进行编译处理\r\nexport function compileToFunction(template) {\r\n    // 1、将template转化成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 2、生成render方法（render方法执行后的返回的结果就是虚拟DOM）\r\n}","// 保留数组的原型\r\nlet oldArrayProto = Array.prototype;\r\n// 以数组的原型作为原型创建新的原型对象（newArrayProto.__proto__ = oldArrayProto），\r\n// 这样重写的方法只会存在newArrayProto上，不会污染oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\n// 需重写的7个变异方法\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'];\r\nmethods.forEach(method => {\r\n    // 重写的方法挂载到newArrayProto上\r\n    newArrayProto[method] = function(...args) {\r\n        // 内部调用原来的方法，面向切片编程\r\n        // 如 arr.push(1, 2, 3)，this为arr，args为[1, 2, 3]\r\n        const result = oldArrayProto[method].call(this, ...args);\r\n\r\n        // 获取数组新增的数据\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                // 如新增元素时，只需获取第2个下标后的数据：arr.splice(0, 1, {a: 1}, {b: 2})\r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // 对新增的数据再次进行劫持\r\n        if(inserted) {\r\n            ob.observeArray(inserted);\r\n        }\r\n\r\n        return result;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\n\r\nclass Observer {\r\n    // Object.defineProperty只能劫持已经存在的属性（vue里面会为此单独写一些api $set $delete）\r\n    constructor(data) {\r\n        // 需要给对象添加一个__ob__属性，赋值为this，有2个作用\r\n        // 1、数组对新增的数据再次进行劫持，需要调用this的observeArray方法\r\n        // 2、如果一个对象存在Observer类型的__ob__属性，说明被劫持过了，就不需要再被劫持了\r\n        // 另外，需要设置__ob__属性为不可枚举，否则遍历到__ob__属性为一个对象，会被调用observe方法劫持，又给它本身挂载一个__ob__属性，死循环。\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        });\r\n        \r\n        if(Array.isArray(data)) {\r\n            // 数组项一旦多了，每个项都劫持对性能不好，所以重写数组中7个变异方法，是可以修改数组本身\r\n            \r\n            // 需要保留数组原有的特性，并且重写部分方法\r\n            data.__proto__ = newArrayProto;\r\n            // 如果数组中存在属性是对象，可以监听到对象的变化\r\n            this.observeArray(data);\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n    }\r\n\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    // 属性的属性也可能是对象，需要递归劫持\r\n    observe(value);\r\n    // 这里的value相当于全局的闭包，let value = null\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            console.log('获取值')\r\n            return value\r\n        },\r\n        set(newVal) {\r\n            console.log('设置值')\r\n            // 如果设置的新值是对象的话，也要进行劫持后再赋值\r\n            observe(newVal)\r\n            if(newVal === value) return\r\n            value = newVal\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 只对对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例判断是否被劫持过）\r\n    if(data.__ob__ instanceof Observer) {\r\n        return data.__ob__;\r\n    }\r\n    \r\n    return new Observer(data)\r\n}","import { compileToFunction } from './compiler/index.js';\r\nimport { observe } from './observe/index'\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function(options) { // 用于初始化操作\r\n        // vm.$options 就是获取用户的配置$nextTick $data $attr ...\r\n        const vm = this;\r\n        \r\n        vm.$options = options;\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        // 实现数据挂载到元素\r\n        if(options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        // 先查找有无render函数\r\n        if(!ops.render) {\r\n            // 没有render函数，查找有无template\r\n            let template;\r\n            // 没有template模板，但是有el元素\r\n            if(!ops.template && el) {\r\n                template = el.outerHTML;\r\n            } else {\r\n                // 有template模板，使用template模板\r\n                if(el) {\r\n                    template = ops.template;\r\n                }\r\n            }\r\n            // 获取到template 需要对模板进行编译\r\n            if(template) {\r\n                const render = compileToFunction(template);\r\n                // 模板编译后转化成render函数 挂载到实例上\r\n                ops.render = render;\r\n            }\r\n        }\r\n\r\n        // script标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n        // runtime 和 runtimeWithCompiler的区别就是多了一个compileToFunction步骤\r\n        // 所以runtime是不包含模板编译的 整个编译是打包通过vue-loader转义.vue文件\r\n        // 所以使用vue.runtime.js不能编译选项的template属性\r\n    }\r\n}\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if(opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // data可能是函数或者对象\r\n    data = typeof data === 'function' ? data.call(vm) : data;\r\n    \r\n    // 将返回的对象放到了vue实例的_data属性上\r\n    vm._data = data\r\n    // 对数据进行劫持，vue采用了defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data用vm代理就无须通过vm._data.xxx获取，而是vm.xxx直接获取\r\n    for(let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}","import { initMixin } from \"./init\";\r\n\r\n// Vue构造函数\r\nfunction Vue(options) {\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue); // 扩展了init方法\r\n\r\nexport default Vue;"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","console","log","compileToFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","args","_key","result","call","apply","inserted","ob","__ob__","slice","observeArray","Observer","data","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newVal","_typeof","initMixin","Vue","_init","options","vm","$options","initState","el","$mount","document","querySelector","ops","render","outerHTML","opts","initData","proxy","newValue","_data"],"mappings":"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"}