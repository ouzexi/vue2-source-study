{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/init.js","../src/index.js"],"sourcesContent":["// 对模板进行编译处理\r\nexport function compileToFunction(template) {\r\n    console.log(template);\r\n}","// 保留数组的原型\r\nlet oldArrayProto = Array.prototype;\r\n// 以数组的原型作为原型创建新的原型对象（newArrayProto.__proto__ = oldArrayProto），\r\n// 这样重写的方法只会存在newArrayProto上，不会污染oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\n// 需重写的7个变异方法\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'];\r\nmethods.forEach(method => {\r\n    // 重写的方法挂载到newArrayProto上\r\n    newArrayProto[method] = function(...args) {\r\n        // 内部调用原来的方法，面向切片编程\r\n        // 如 arr.push(1, 2, 3)，this为arr，args为[1, 2, 3]\r\n        const result = oldArrayProto[method].call(this, ...args);\r\n\r\n        // 获取数组新增的数据\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                // 如新增元素时，只需获取第2个下标后的数据：arr.splice(0, 1, {a: 1}, {b: 2})\r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // 对新增的数据再次进行劫持\r\n        if(inserted) {\r\n            ob.observeArray(inserted);\r\n        }\r\n\r\n        return result;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\n\r\nclass Observer {\r\n    // Object.defineProperty只能劫持已经存在的属性（vue里面会为此单独写一些api $set $delete）\r\n    constructor(data) {\r\n        // 需要给对象添加一个__ob__属性，赋值为this，有2个作用\r\n        // 1、数组对新增的数据再次进行劫持，需要调用this的observeArray方法\r\n        // 2、如果一个对象存在Observer类型的__ob__属性，说明被劫持过了，就不需要再被劫持了\r\n        // 另外，需要设置__ob__属性为不可枚举，否则遍历到__ob__属性为一个对象，会被调用observe方法劫持，又给它本身挂载一个__ob__属性，死循环。\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        });\r\n        \r\n        if(Array.isArray(data)) {\r\n            // 数组项一旦多了，每个项都劫持对性能不好，所以重写数组中7个变异方法，是可以修改数组本身\r\n            \r\n            // 需要保留数组原有的特性，并且重写部分方法\r\n            data.__proto__ = newArrayProto;\r\n            // 如果数组中存在属性是对象，可以监听到对象的变化\r\n            this.observeArray(data);\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n    }\r\n\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    // 属性的属性也可能是对象，需要递归劫持\r\n    observe(value);\r\n    // 这里的value相当于全局的闭包，let value = null\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            console.log('获取值')\r\n            return value\r\n        },\r\n        set(newVal) {\r\n            console.log('设置值')\r\n            // 如果设置的新值是对象的话，也要进行劫持后再赋值\r\n            observe(newVal)\r\n            if(newVal === value) return\r\n            value = newVal\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 只对对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例判断是否被劫持过）\r\n    if(data.__ob__ instanceof Observer) {\r\n        return data.__ob__;\r\n    }\r\n    \r\n    return new Observer(data)\r\n}","import { compileToFunction } from './compiler/index.js';\r\nimport { observe } from './observe/index'\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function(options) { // 用于初始化操作\r\n        // vm.$options 就是获取用户的配置$nextTick $data $attr ...\r\n        const vm = this;\r\n        \r\n        vm.$options = options;\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        // 实现数据挂载到元素\r\n        if(options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        // 先查找有无render函数\r\n        if(!ops.render) {\r\n            // 没有render函数，查找有无template\r\n            let template;\r\n            // 没有template模板，但是有el元素\r\n            if(!ops.template && el) {\r\n                template = el.outerHTML;\r\n            } else {\r\n                // 有template模板，使用template模板\r\n                if(el) {\r\n                    template = ops.template;\r\n                }\r\n            }\r\n            // 获取到template 需要对模板进行编译\r\n            if(template) {\r\n                const render = compileToFunction(template);\r\n                // 模板编译后转化成render函数 挂载到实例上\r\n                ops.render = render;\r\n            }\r\n        }\r\n\r\n        // script标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n        // runtime 和 runtimeWithCompiler的区别就是多了一个compileToFunction步骤\r\n        // 所以runtime是不包含模板编译的 整个编译是打包通过vue-loader转义.vue文件\r\n        // 所以使用vue.runtime.js不能编译选项的template属性\r\n    }\r\n}\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if(opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // data可能是函数或者对象\r\n    data = typeof data === 'function' ? data.call(vm) : data;\r\n    \r\n    // 将返回的对象放到了vue实例的_data属性上\r\n    vm._data = data\r\n    // 对数据进行劫持，vue采用了defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data用vm代理就无须通过vm._data.xxx获取，而是vm.xxx直接获取\r\n    for(let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}","import { initMixin } from \"./init\";\r\n\r\n// Vue构造函数\r\nfunction Vue(options) {\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue); // 扩展了init方法\r\n\r\nexport default Vue;"],"names":["compileToFunction","template","console","log","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","Observer","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newVal","_typeof","initMixin","Vue","_init","options","vm","$options","initState","el","$mount","document","querySelector","ops","render","outerHTML","opts","initData","proxy","newValue","_data"],"mappings":"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"}