{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 匹配到的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性 第一个分组就是属性的key value 就是 分组3/分组4/分组5\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 开始标签的结束位置 <div attrs='xxx'> <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n// vue3采用的不是正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    // 存放元素的栈\r\n    const stack = [];\r\n    // 指向栈中最后一个元素\r\n    let currentParent;\r\n    // 根节点\r\n    let root;\r\n\r\n    // 最终需要转化成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        // 创建一个ast节点\r\n        let node = createASTElement(tag, attrs);\r\n        // 如果为空树，则当前节点为树的根节点\r\n        if(!root) {\r\n            root = node;\r\n        }\r\n        // 当前节点的父节点为栈中最后一个节点\r\n        if(currentParent) {\r\n            // 设置当前节点的父节点\r\n            node.parent = currentParent;\r\n            // 同时设置当前节点的父节点的子节点为自身\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        // currentParent指向栈中最后一个\r\n        currentParent = node;\r\n    }\r\n\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '');\r\n        // 文本直接作为当前指向的节点的子元素\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        });\r\n    }\r\n\r\n    function end(tag) {\r\n        // 弹出最后一个（检验标签是否合法-待完成）\r\n        // 此时该节点包括它的子节点的ast树已构造完毕\r\n        let node = stack.pop();\r\n        // 指向该节点的父元素 继续构造\r\n        currentParent = stack[stack.length - 1];\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if(start) {\r\n            const match = {\r\n                // match第一个分组是标签名\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // 匹配到的字符舍弃 继续前进遍历html模板\r\n            advance(start[0].length);\r\n\r\n            // 如果不是开始标签的结束位置 就一直匹配 获取属性<div attr='xxx' />\r\n            let attr, end;\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\r\n            }\r\n            // 前进到结束闭合 > 符号，说明这一个标签上部分已经匹配完 如<div attr='x'>已匹配完 </div>未匹配\r\n            if(end) {\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n        // 否则不是开始标签\r\n        return false;\r\n    }\r\n\r\n    // html最开始肯定是一个<\r\n    while(html) {\r\n        // 如果textEnd为0 则说明是个开始或者自闭合结束标签 <div> / <div />\r\n        // 如果textEnd > 0 则说明是文本的结束位置 </div>\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd === 0) {\r\n            // 开始标签的匹配结果\r\n            const startTagMatch = parseStartTag();\r\n            if(startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            // 结束标签的匹配结果\r\n            const endTagMatch = html.match(endTag)\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        if(textEnd > 0) {\r\n            // console.log(html)\r\n            // 文本内容\r\n            let text = html.substring(0, textEnd);\r\n            if(text) {\r\n                chars(text);\r\n                // 解析完文本后继续前进\r\n                advance(text.length)\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    // {name: value}\r\n    let str = '';\r\n    for(let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if(attr.name === 'style') {\r\n            // color: red; background: red; => { color: 'red', background: 'red' }\r\n            let obj = {};\r\n            // qs库也可以实现\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        // id: 'app', style: '{color: 'red'}, '\r\n        str += `${attr.name}: ${JSON.stringify(attr.value)},`\r\n    }\r\n    // 删除最后一个逗号 {id: 'app', style: '{color: 'red'}}\r\n    return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\n// {{ name }} 匹配到的内容就是表达式的变量\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nfunction gen(node) {\r\n    // 元素节点\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本节点\r\n        let text = node.text;\r\n        if(!defaultTagRE.test(text)) {\r\n            // 普通文本 返回_v('str')\r\n            return `_v(${JSON.stringify(text)})`;\r\n        } else {\r\n            // 变量 返回 _v(_s(name) + 'hello' + _s(age))\r\n            // 存放字符的数组[{{name}}, 'hello', {{age}}]\r\n            let tokens = [];\r\n            // 每次匹配到的字符\r\n            let match;\r\n            // 如果 regexp.exec 匹配成功，lastIndex会被设置为紧随最近一次成功匹配的下一个位置，所以每次匹配要重置为0\r\n            defaultTagRE.lastIndex = 0;\r\n            // 最后一次匹配成功的下标\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)) {\r\n                // {{name}} hello {{age}} hello \r\n                // 匹配到的下标\r\n                let index = match.index;\r\n                if(index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n                }\r\n                // match[0] -> {{name}} / match[1] -> name\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            // 匹配完后，还可能存在普通字符\r\n            if(lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join('+')})`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children ? children.map(child => gen(child)).join(',') : '';\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    // console.log(\"🚀 ~ file: index.js:73 ~ codegen ~ children:\", children)\r\n    // _c('div', {id: 'app'}, _v(_s(name) + 'hello'))\r\n    let code = (`_c('${ast.tag}', ${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `, ${children}` : ''})`);\r\n    return code;\r\n}\r\n\r\n// 对模板进行编译处理\r\nexport function compileToFunction(template) {\r\n    // 1、将template转化成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 2、生成render方法（render方法执行后的返回的结果就是虚拟DOM）\r\n    let code = codegen(ast);\r\n    \r\n    // 将this指向当前实例vm 就可以访问当前实例的name、age\r\n    code = `with(this) {return ${code}}`;\r\n    let render = new Function(code);\r\n    // 生成render函数\r\n    return render;\r\n}","// 每个属性对应一个id\r\n// 一个属性对象多个watcher（视图） 因为一个属性可以在多个组件存在\r\nlet id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        // 属性的dep要收集watcher\r\n        this.id = id++;\r\n        // 存放当前属性对应的watcher有哪些\r\n        this.subs = [];\r\n    }\r\n\r\n    // dep和watcher是多对多关系\r\n    // 一个属性可以在多个组件中使用 - 一个dep对应多个watcher\r\n    // 一个组件存在多个属性 - 一个watcher对应多个dep\r\n    // 所以建立双向关系 dep调用depend时当前watcher（组件/视图）会把这个dep存起来\r\n    // 同时这个dep会调用addSub把当前watcher也存起来\r\n    depend() {\r\n        Dep.target.addDep(this);\r\n    }\r\n\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n\r\n    // 属性修改时，会通知使用到这个属性的视图进行更新操作\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update());\r\n    }\r\n}\r\n\r\nDep.target = null;\r\n// 用一个栈维护多个watcher（包括计算属性watcher、渲染watcher）\r\nlet stack = [];\r\n\r\nexport function pushTarget(watcher) {\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\n\r\nexport function popTarget() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;","// 一个视图（组件）对应一个watcher\r\n\r\nimport Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\n/* \r\n    1）当创建渲染watcher时会把当前渲染的watcher对象赋值到Dep.target上\r\n    2）调用_render会取值 走到get上\r\n    每个属性有一个dep（属性就是被观察者），watcher就是观察者（属性变化后会通知观察者更新） --- 观察者模式\r\n*/\r\n\r\nlet id = 0;\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, options, cb) {\r\n        this.id = id++;\r\n        // 表示是一个渲染watcher\r\n        this.renderWatcher = options;\r\n\r\n        // getter表示调用这个函数可以发生取值操作\r\n        // watch可以传入字符串 取methods中的函数\r\n        if(typeof exprOrFn === 'string') {\r\n            this.getter = function() { return vm[exprOrFn]; }\r\n        } else {\r\n            this.getter = exprOrFn;\r\n        }\r\n\r\n        // 实现计算属性和进行一些清理工作需要用到\r\n        this.deps = [];\r\n        // 每个属性的dep对应一个depId，避免重复收集\r\n        this.depsId = new Set();\r\n        this.vm = vm;\r\n        // 计算属性watcher传入的缓存标记\r\n        this.lazy = options.lazy;\r\n        this.dirty = this.lazy;\r\n        this.cb = cb;\r\n        this.user = options.user;\r\n        // 如果是计算属性watcher 创建实例时不会自动触发\r\n        this.value = this.lazy ? undefined : this.get();\r\n    }\r\n\r\n    addDep(dep) {\r\n        // 一个组件对应多个属性 重复的属性不用记录 比如 <div>{{name}} {{age}} {{name}} {{name}}</div>\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            // watcher已经记住dep并且去重了，此时让dep也记住watcher\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n\r\n    // 计算属性执行getter得到计算属性的值\r\n    evaluate() {\r\n        // 获取到getter的返回值 同时标识数据不脏了\r\n        this.value = this.get();\r\n        this.dirty = false;\r\n    }\r\n\r\n    get() {\r\n        // 将收集器的目标设置为当前视图\r\n        pushTarget(this);\r\n        // 调用getter即vm._update(vm._render)会调用render方法生成虚拟dom\r\n        // render方法会在vm上取值如vm.name vm.age\r\n        // 此时触发属性的dep收集依赖\r\n        let value = this.getter.call(this.vm);\r\n        // render渲染完毕后重置\r\n        popTarget();\r\n        return value;\r\n    }\r\n\r\n    // 让计算属性watcher中deps中的每个依赖属性dep去收集当前计算属性所在的渲染watcher\r\n    depend() {\r\n        let i = this.deps.length;\r\n        while(i--) {\r\n            this.deps[i].depend();\r\n        }\r\n    }\r\n\r\n    update() {\r\n        console.log('update...', this)\r\n        if(this.lazy) {\r\n            // 如果是计算属性watcher 依赖的值变化 就标识计算属性为脏值\r\n            this.dirty = true;\r\n        } else {\r\n            // 当前视图多个属性多次改变时，update会触发多次\r\n            // 把当前的watcher暂存起来 实现批量刷新 这样update无论触发多少次 视图更新只调用一次\r\n            queueWatcher(this);\r\n        }\r\n    }\r\n\r\n    run() {\r\n        // 保存上一次的旧值 给watch使用\r\n        let oldValue = this.value;\r\n        // 渲染时使用最新的vm来渲染\r\n        // 比如vm.name = 20; vm = name = 12; name多次赋值后，取的是最后一次\r\n        let newValue = this.get();\r\n        // 如果是watch的watcher触发 则调用回调\r\n        if(this.user) {\r\n            this.cb.call(this.vm, newValue, oldValue);\r\n        }\r\n    }\r\n}\r\n\r\n// 记录需要更新的watcher（视图/组件）\r\nlet queue = [];\r\n// 记录当前视图是否已存在于更新队列 去重\r\nlet has = {};\r\n// 防抖\r\nlet pending = false;\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    // 重置\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n    // 在执行的过程中可能还有新的watcher 重新放到queue中\r\n    flushQueue.forEach(q => q.run());\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if(!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 批量执行更新 不管update执行多少次 最终只执行一轮刷新操作（是第一次开启的）\r\n        if(!pending) {\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\n// nextTick收集的回调函数队列\r\nlet callbacks = [];\r\n// 只在第一次触发nextTick开启 就能保证只开启一次异步操作 队列执行完后重置\r\nlet waiting = false;\r\n// 批量执行\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0);\r\n    // 重置\r\n    waiting = false;\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb());\r\n}\r\n\r\n// nextTick采用优雅降级的方式\r\nlet timerFunc;\r\nif(Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks);\r\n    }\r\n} else if(MutationObserver) {\r\n    // 传入的回调函数是异步执行的\r\n    let observer = new MutationObserver(flushCallbacks);\r\n    let textNode = document.createTextNode(1);\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    });\r\n    timerFunc = () => {\r\n        // 元素变化会执行MutationObserver回调\r\n        textNode.textContent = 2;\r\n    }\r\n} else if(setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks);\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks);\r\n    }\r\n}\r\n\r\n// 批量执行，一般是用一个waiting变量控制，第一次触发开启一个异步事件，之后收集全部函数，同步代码执行完后，最后异步批量执行\r\n// 注意：nextTick不是异步的，他只是收集回调队列，开启异步执行队列\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb);\r\n    if(!waiting) {\r\n        timerFunc();\r\n        waiting = true;\r\n    }\r\n}\r\n\r\nexport default Watcher;","// _h() _c() 传入实例 标签名 标签属性 子节点\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if(data == null) data = {};\r\n    let key = data.key;\r\n    if(key) {\r\n        delete data.key;\r\n    }\r\n    return vnode(vm, tag, key, data, children);\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// ast是语法层面的转化 描述的是语法本身 可以描述js css html\r\n// 虚拟dom描述的是dom元素 可以为dom增加一些自定义属性\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    }\r\n}\r\n\r\nexport function isSameVNode(vnode1, vnode2) {\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}","import { isSameVNode } from \"./index\";\r\n\r\nfunction patchProps(el, oldProps = {}, props = {}) {\r\n    // 某个属性 老节点中有 新节点中没有 要删除老的\r\n    let oldStyles = oldProps.style || {};\r\n    let newStyles = props.style || {};\r\n    // 老节点样式中有 新的没有 要把样式去掉\r\n    for(let key in oldStyles) {\r\n        if(!newStyles[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n\r\n    // 比较其他新老属性\r\n    for(let key in oldProps) {\r\n        if(!props[key]) {\r\n            el.removeAttribute(key);\r\n        }\r\n    }\r\n\r\n    for(let key in props) {\r\n        if(key === 'style') {\r\n            for(let styleName in props['style']) {\r\n                el.style[styleName] = props['style'][styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\n\r\nexport function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    // 标签元素\r\n    if(typeof tag === 'string') {\r\n        // vnode增加el属性，将虚拟dom和真实dom对应起来，方便后续修改props属性\r\n        vnode.el = document.createElement(tag);\r\n        patchProps(vnode.el, {}, data);\r\n        children.forEach(child => {\r\n            const childElm = createElm(child);\r\n            vnode.el.appendChild(childElm);\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\n// 初始化的时候，oldVNode是真实dom 更新时是上一次虚拟DOM\r\nexport function patch(oldVNode, vnode) {\r\n    // nodeType是dom元素原生属性\r\n    const isRealElement = oldVNode.nodeType;\r\n    if(isRealElement) {\r\n        // 获取真实dom\r\n        const elm = oldVNode;\r\n        // 获取父元素\r\n        const parentElm = elm.parentNode;\r\n        // 根据虚拟dom创建真实dom\r\n        let newElm = createElm(vnode);\r\n        // 插入到原节点的相邻节点\r\n        parentElm.insertBefore(newElm, elm.nextSibling);\r\n        // 移除原节点\r\n        parentElm.removeChild(elm);\r\n\r\n        return newElm;\r\n    } else {\r\n        // diff算法（平级比较）\r\n        // 1、两个节点不是同一个节点 直接删除老的换上新的 （无需对比）\r\n        // 2、两个节点是同一个节点（判断tag和key） 比较两个节点的属性是否有差异（复用老的节点，将差异的属性更新）\r\n        // 3、节点比较完毕后需要比较两个节点的子节点\r\n        return patchVnode(oldVNode, vnode);\r\n    }\r\n}\r\n\r\nfunction patchVnode(oldVNode, vnode) {\r\n    if(!isSameVNode(oldVNode, vnode)) {\r\n        // 新的替换老的\r\n        let el = createElm(vnode);\r\n        oldVNode.el.parentNode.replaceChild(el, oldVNode.el);\r\n        return el;\r\n    }\r\n    // 文本的情况(文本的tag和key都为undefined) 比较文本的内容\r\n    // 复用老节点的元素 无需新创建dom\r\n    let el = vnode.el = oldVNode.el;\r\n    // 都是文本\r\n    if(!oldVNode.tag) {\r\n        if(oldVNode.text !== vnode.text) {\r\n            // 用新的文本覆盖老的文本\r\n            el.textContent = vnode.text;\r\n        }\r\n    }\r\n    // 比对标签的属性\r\n    patchProps(el, oldVNode.data, vnode.data);\r\n\r\n    // 比较儿子节点 需要考虑 一方有儿子&一方没儿子 或 两方都有儿子\r\n    let oldChildren = oldVNode.children || [];\r\n    let newChildren = vnode.children || [];\r\n\r\n    // 两方都有儿子\r\n    if(oldChildren.length > 0 && newChildren.length > 0) {\r\n        updateChildren(el, oldChildren, newChildren);\r\n    }\r\n    // 老节点没有儿子 新节点有 直接插入儿子\r\n    else if(newChildren.length > 0) {\r\n        mountChildren(el, newChildren);\r\n    }\r\n    // 新节点没有儿子 老节点有 直接删除儿子\r\n    else if(oldChildren.length > 0) {\r\n        // 可以循环 removeChild\r\n        el.innerHTML = '';\r\n    }\r\n    return el;\r\n}\r\n\r\nfunction mountChildren(el, newChildren) {\r\n    for(let i = 0; i < newChildren.length; i++) {\r\n        let child = newChildren[i];\r\n        el.appendChild(createElm(child));\r\n    }\r\n}\r\n\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    // 双指针比较两个节点 新头-旧头 新尾-旧尾 当头指针超过尾指针时结束\r\n    let oldStartIndex = 0;\r\n    let newStartIndex = 0;\r\n    let oldEndIndex = oldChildren.length - 1;\r\n    let newEndIndex = newChildren.length - 1;\r\n\r\n    let oldStartVnode = oldChildren[oldStartIndex];\r\n    let newStartVnode = newChildren[newStartIndex];\r\n\r\n    let oldEndVnode = oldChildren[oldEndIndex];\r\n    let newEndVnode = newChildren[newEndIndex];\r\n\r\n    // 将老节点的子节点做映射表\r\n    function makeIndexByKey(children) {\r\n        let map = {};\r\n        children.forEach((child, index) => {\r\n            map[child.key] = index;\r\n        });\r\n        return map;\r\n    }\r\n\r\n    let map = makeIndexByKey(oldChildren);\r\n\r\n    // 思考 循环为什么要加key\r\n    // 新老节点双方有一方头指针大于尾指针则停止循环\r\n    while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n        // 因为可能被标记过 设置为undefined 需要跳过\r\n        if(!oldStartVnode) {\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n        }\r\n        // 因为可能被标记过 \r\n        else if(!oldEndVnode) {\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n        }\r\n        // 头头比对\r\n        else if(isSameVNode(oldStartVnode, newStartVnode)) {\r\n            patchVnode(oldStartVnode, newStartVnode);\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n        // 尾尾比对\r\n        else if(isSameVNode(oldEndVnode, newEndVnode)) {\r\n            patchVnode(oldEndVnode, newEndVnode);\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }\r\n        // 尾头比对\r\n        else if(isSameVNode(oldEndVnode, newStartVnode)) {\r\n            patchVnode(oldEndVnode, newStartVnode);\r\n            // 新的头节点 与 老的尾节点 相同，复用老节点 移到头部 \r\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el);\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n        // 头尾比对\r\n        else if(isSameVNode(oldStartVnode, newEndVnode)) {\r\n            patchVnode(oldStartVnode, newEndVnode);\r\n            // 新的尾节点 与 老的头节点 相同，复用老节点 移到尾部\r\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\r\n        }\r\n        // 乱序比对\r\n        // 在给动态列表添加key的时候 要尽量避免使用索引 因为索引前后都是从0开始 会发生错误复用\r\n        // 根据老的节点列表做一个映射关系 用新节点去遍历寻找 若找到则移动至头部（因为新节点从头部遍历） 找不到则添加 最后多余的老节点则删除\r\n        else {\r\n            let moveIndex = map[newStartVnode.key];\r\n            // 在老节点映射表中找到对应虚拟节点 则复用\r\n            if(moveIndex !== undefined) {\r\n                let moveVnode = oldChildren[moveIndex];\r\n                el.insertBefore(moveVnode.el, oldStartVnode.el);\r\n                // 表示该节点已做移动处理 不能再比较复用\r\n                oldChildren[moveIndex] = undefined;\r\n                patchVnode(moveVnode, newStartVnode);\r\n            }\r\n            // 找不到则添加至头部\r\n            else {\r\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n            }\r\n            // 当前新节点处理完毕 到下一个\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n    }\r\n    // 老节点列表遍历完毕 新节点列表还未遍历完毕 则把多余的新节点插入\r\n    if(newStartIndex <= newEndIndex) {\r\n        for(let i = newStartIndex; i <= newEndIndex; i++) {\r\n            let childEl = createElm(newChildren[i]);\r\n            // 这里可能向后追加 也可能是向前追加（尾尾比对的情况）\r\n            // 判断方法是 新节点列表end下标后是否有下一个节点 有则头插 无则尾插 \r\n            // 所以使用insertBefore代替appendChild 它第二个参数为null时相当于appendChild\r\n            let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null;\r\n            el.insertBefore(childEl, anchor);\r\n        }\r\n    }\r\n    // 新节点列表遍历完毕 老节点列表还未遍历完毕 则把多余的老节点删除\r\n    if(oldStartIndex <= oldEndIndex) {\r\n        for(let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n            // 未被做移动处理的老节点才删除\r\n            if(oldChildren[i]) {\r\n                let childEl = oldChildren[i].el;\r\n                el.removeChild(childEl);\r\n            }\r\n        }\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom/index\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function(vnode) {\r\n        const vm = this;\r\n        const el = vm.$el;\r\n        // patch既有初始化的功能 又有更新的功能\r\n        vm.$el = patch(el, vnode);\r\n    }\r\n\r\n    // _c('div', {}, ...children)\r\n    Vue.prototype._c = function() {\r\n        return createElementVNode(this, ...arguments);\r\n    }\r\n\r\n    // _v(text)\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this, ...arguments);\r\n    }\r\n\r\n    Vue.prototype._s = function(value) {\r\n        if(typeof value !== 'object') return value;\r\n        return JSON.stringify(value);\r\n    }\r\n\r\n    Vue.prototype._render = function() {\r\n        // 当渲染时会去实例中取值，可以将属性和视图绑定\r\n        const vm = this;\r\n        // 执行render方法，生成虚拟DOM\r\n        return vm.$options.render.call(this);\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    // $el为querySelector获取的真实DOM\r\n    vm.$el = el;\r\n    // 1、调用render方法生成虚拟节点 虚拟DOM\r\n    const updateComponent = () => {\r\n        vm._update(vm._render());\r\n    }\r\n    const watcher = new Watcher(vm, updateComponent, true);\r\n    // 2、根据虚拟DOM生成真实DOM\r\n    // 3、插入到el元素中\r\n}\r\n\r\n// vue核心 \r\n// 1）创造了响应式数据\r\n// 2）模板转换成ast语法树\r\n// 3）将ast语法树转换成render函数\r\n// 4）后续每次更新可以只执行render函数（无需再执行ast转化的过程）","// 保留数组的原型\r\nlet oldArrayProto = Array.prototype;\r\n// 以数组的原型作为原型创建新的原型对象（newArrayProto.__proto__ = oldArrayProto），\r\n// 这样重写的方法只会存在newArrayProto上，不会污染oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\n// 需重写的7个变异方法\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'];\r\nmethods.forEach(method => {\r\n    // 重写的方法挂载到newArrayProto上\r\n    newArrayProto[method] = function(...args) {\r\n        // 内部调用原来的方法，面向切片编程\r\n        // 如 arr.push(1, 2, 3)，this为arr，args为[1, 2, 3]\r\n        const result = oldArrayProto[method].call(this, ...args);\r\n\r\n        // 获取数组新增的数据\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                // 如新增元素时，只需获取第2个下标后的数据：arr.splice(0, 1, {a: 1}, {b: 2})\r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // 对新增的数据再次进行劫持\r\n        if(inserted) {\r\n            ob.observeArray(inserted);\r\n        }\r\n\r\n        // 数组本身变化 通知对应的watcher更新视图\r\n        ob.dep.notify();\r\n\r\n        return result;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observer {\r\n    // Object.defineProperty只能劫持已经存在的属性（vue里面会为此单独写一些api $set $delete）\r\n    constructor(data) {\r\n\r\n        // 给每个对象（对象包括数组）增加收集功能 这样当实例的属性为数组/对象时，对应的数组/对象也会收集依赖\r\n        // 比如vm.arr = [1, 2, 3]，此时vm.arr = [4, 5]会触发视图更新，但是vm.arr.push(6)不会触发更新\r\n        // 因为vm.arr对应的这个数组本身没有收集依赖，所以现在要加上dep收集依赖，在调用7个变异方法后调用notify通知视图更新\r\n        // 同样地，vm.obj = {a: 1} -> vm.obj.b = 2 obj对应的对象本身也需要收集依赖，但是新增b属性时不会触发更新\r\n        // 因为没有调用notify通知更新，可以使用$set更新\r\n        this.dep = new Dep();\r\n\r\n        // 需要给对象添加一个__ob__属性，赋值为this，有2个作用\r\n        // 1、数组对新增的数据再次进行劫持，需要调用this的observeArray方法\r\n        // 2、如果一个对象存在Observer类型的__ob__属性，说明被劫持过了，就不需要再被劫持了\r\n        // 另外，需要设置__ob__属性为不可枚举，否则遍历到__ob__属性为一个对象，会被调用observe方法劫持，又给它本身挂载一个__ob__属性，死循环。\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        });\r\n        \r\n        if(Array.isArray(data)) {\r\n            // 数组项一旦多了，每个项都劫持对性能不好，所以重写数组中7个变异方法，是可以修改数组本身\r\n            \r\n            // 需要保留数组原有的特性，并且重写部分方法\r\n            data.__proto__ = newArrayProto;\r\n            // 如果数组中存在属性是对象，可以监听到对象的变化\r\n            this.observeArray(data);\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n    }\r\n\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\n// 对象的属性或数组的项也可能是对象/数组，深层次嵌套递归使对象/数组本身收集依赖，使其改变时可以调用notify更新视图\r\nfunction dependArray(value) {\r\n    for(let i = 0; i < value.length; i++) {\r\n        let current = value[i];\r\n        current.__ob__ && current.__ob__.dep.depend();\r\n        if(Array.isArray(current)) {\r\n            dependArray(current);\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    // 属性的属性也可能是对象，需要递归劫持\r\n    let childOb = observe(value);\r\n    // 这里的value相当于全局的闭包，let value = null\r\n\r\n    // 每个属性都有一个Dep对象\r\n    let dep = new Dep();\r\n\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            if(Dep.target) {\r\n                // 让这个属性的收集器dep记住当前的watcher\r\n                // 同时当前的watcher会记住这个属性的收集器\r\n                dep.depend();\r\n                // 同样地，属性的属性如果是对象/数组的话，本身也要实现依赖收集\r\n                if(childOb) {\r\n                    childOb.dep.depend();\r\n                    if(Array.isArray(value)) {\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newVal) {\r\n            if(newVal === value) return\r\n            // 如果设置的新值是对象的话，也要进行劫持后再赋值\r\n            observe(newVal)\r\n            value = newVal\r\n\r\n            // 属性变化，通知视图更新\r\n            dep.notify();\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 只对对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例判断是否被劫持过）\r\n    if(data.__ob__ instanceof Observer) {\r\n        return data.__ob__;\r\n    }\r\n    \r\n    return new Observer(data)\r\n}","import Dep from './observe/dep.js';\r\nimport { observe } from './observe/index'\r\nimport Watcher, { nextTick } from './observe/watcher.js';\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if(opts.data) {\r\n        initData(vm);\r\n    }\r\n    if(opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if(opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // data可能是函数或者对象\r\n    data = typeof data === 'function' ? data.call(vm) : data;\r\n    \r\n    // 将返回的对象放到了vue实例的_data属性上\r\n    vm._data = data\r\n    // 对数据进行劫持，vue采用了defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data用vm代理就无须通过vm._data.xxx获取，而是vm.xxx直接获取\r\n    for(let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed;\r\n    // 将计算属性watcher保存到vm上\r\n    const watchers = vm._computedWatchers = {};\r\n    for(let key in computed) {\r\n        let userDef = computed[key];\r\n        // 获取计算属性中get\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get;\r\n\r\n        // 每个计算属性创建一个计算属性watcher lasy: true表示默认不会执行计算属性的get方法（有缓存功能）\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true });\r\n        \r\n        defineComputed(vm, key, userDef);\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    const setter = userDef.set || (() => {});\r\n    // 通过实例获取对应的属性\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    })\r\n}\r\n\r\n// 计算属性不会收集依赖，只会让自己的依赖属性去收集依赖（即计算属性watcher中的deps中的每个dep会depend这个计算属性所在的渲染watcher）\r\nfunction createComputedGetter(key) {\r\n    // 判断是否需要执行getter\r\n    return function() {\r\n        // 获取该计算属性对应的watcher\r\n        const watcher = this._computedWatchers[key];\r\n        if(watcher.dirty) {\r\n            // 如果是脏的就执行\r\n            // 执行后dirty不脏了，下次就不会执行\r\n            watcher.evaluate();\r\n        }\r\n        // 计算属性执行后出栈 此时Dep.target为渲染watcher 需要让计算属性中所依赖的属性也去收集该渲染watcher\r\n        // 否则依赖的属性的subs中没有渲染watcher，修改它们时不会更新视图\r\n        // 如fullName = firstName + lastName 这时firstName和lastName属于fullName计算属性watcher中的deps中收集的dep，他们2个会收集渲染watcher\r\n        if(Dep.target) {\r\n            watcher.depend();\r\n        }\r\n        return watcher.value;\r\n    }\r\n}\r\n\r\nfunction initWatch(vm) {\r\n    const watch = vm.$options.watch;\r\n    for(let key in watch) {\r\n        // 可能是字符串 数组 函数\r\n        const handler = watch[key];\r\n        if(Array.isArray(handler)) {\r\n            for(let i = 0; i < handler.length; i++) {\r\n                createWatcher(vm, key, handler[i]);\r\n            }\r\n        } else {\r\n            createWatcher(vm, key, handler);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createWatcher(vm, key, handler) {\r\n    // 字符串 或 函数\r\n    if(typeof handler === 'string') {\r\n        // 从methods中获取\r\n        handler = vm[handler];\r\n    }\r\n    return vm.$watch(key, handler);\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n\r\n    // watch多种形式最终都是调用这个方法\r\n    Vue.prototype.$watch = function(exprOrFn, cb) {\r\n        // firstname / () => vm.firstname\r\n        // firstname的值变化了 直接执行cb函数即可\r\n        new Watcher(this, exprOrFn, { user: true }, cb);\r\n    } \r\n}","import { compileToFunction } from './compiler/index.js';\r\nimport { mountComponent } from './lifecycle.js';\r\nimport { initState } from './state.js';\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function(options) { // 用于初始化操作\r\n        // vm.$options 就是获取用户的配置$nextTick $data $attr ...\r\n        const vm = this;\r\n        \r\n        vm.$options = options;\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        // 实现数据挂载到元素\r\n        if(options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        // 先查找有无render函数\r\n        if(!ops.render) {\r\n            // 没有render函数，查找有无template\r\n            let template;\r\n            // 没有template模板，但是有el元素\r\n            if(!ops.template && el) {\r\n                template = el.outerHTML;\r\n            } else {\r\n                // 有template模板，使用template模板\r\n                if(el) {\r\n                    template = ops.template;\r\n                }\r\n            }\r\n            // 获取到template 需要对模板进行编译\r\n            if(template) {\r\n                const render = compileToFunction(template);\r\n                // 模板编译后转化成render函数 挂载到实例上\r\n                ops.render = render;\r\n            }\r\n        }\r\n        // 组件的挂载，将vm实例挂载到el上\r\n        mountComponent(vm, el)\r\n\r\n        // script标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n        // runtime 和 runtimeWithCompiler的区别就是多了一个compileToFunction步骤\r\n        // 所以runtime是不包含模板编译的 整个编译是打包通过vue-loader转义.vue文件\r\n        // 所以使用vue.runtime.js不能编译选项的template属性\r\n    }\r\n}","import { compileToFunction } from \"./compiler/index\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\nimport { createElm, patch } from \"./vdom/patch\";\r\n\r\n// Vue构造函数\r\nfunction Vue(options) {\r\n    this._init(options)\r\n}\r\n\r\n // 扩展了init方法\r\ninitMixin(Vue);\r\ninitLifeCycle(Vue);\r\n// 实现nextTick $watch\r\ninitStateMixin(Vue);\r\n\r\n// ------------测试虚拟节点diff算法---------------\r\nlet render1 = compileToFunction(`<ul  a=\"1\" style=\"color:blue\">\r\n    <li key=\"a\">a</li>\r\n    <li key=\"b\">b</li>\r\n    <li key=\"c\">c</li>\r\n    <li key=\"d\">d</li>\r\n</ul>`);\r\nlet vm1 = new Vue({ data: { name: 'zf' } })\r\nlet prevVnode = render1.call(vm1)\r\n\r\nlet el = createElm(prevVnode);\r\ndocument.body.appendChild(el)\r\n\r\n\r\nlet render2 = compileToFunction(`<ul  a=\"1\"  style=\"color:red;\">\r\n    <li key=\"b\">b</li>\r\n    <li key=\"m\">m</li>\r\n    <li key=\"a\">a</li>\r\n    <li key=\"p\">p</li>\r\n    <li key=\"c\">c</li>\r\n    <li key=\"q\">q</li>\r\n</ul>`);\r\nlet vm2 = new Vue({ data: { name: 'zf' } })\r\nlet nextVnode = render2.call(vm2);\r\n\r\nsetTimeout(() => {\r\n    patch(prevVnode, nextVnode)\r\n}, 1000)\r\n\r\nexport default Vue;"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","pushTarget","popTarget","Watcher","vm","exprOrFn","options","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","get","dep","has","add","evaluate","call","console","log","queueWatcher","run","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","_len","arguments","Array","_key","vnode","createTextVNode","isSameVNode","vnode1","vnode2","patchProps","el","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","createElm","createElement","childElm","appendChild","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","initLifeCycle","Vue","prototype","_update","$el","_c","apply","_v","_s","_typeof","_render","$options","mountComponent","updateComponent","oldArrayProto","newArrayProto","Object","create","methods","method","_oldArrayProto$method","args","result","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","current","childOb","set","newVal","initState","opts","initData","computed","initComputed","watch","initWatch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","handler","createWatcher","$watch","initStateMixin","$nextTick","initMixin","_init","$mount","querySelector","ops","outerHTML","render1","vm1","prevVnode","body","render2","vm2","nextVnode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,IAAMA,MAAM,GAAiC,8BAAA,CAAA;EAC7C,IAAMC,YAAY,UAAAC,MAAA,CAAUF,MAAM,EAAAE,OAAAA,CAAAA,CAAAA,MAAA,CAAQF,MAAM,EAAG,GAAA,CAAA,CAAA;EACnD;EACA,IAAMG,YAAY,GAAG,IAAIC,MAAM,MAAAF,MAAA,CAAMD,YAAY,CAAE,CAAC,CAAA;EACpD;EACA,IAAMI,MAAM,GAAG,IAAID,MAAM,SAAAF,MAAA,CAASD,YAAY,EAAA,QAAA,CAAQ,CAAC,CAAA;EACvD;EACA,IAAMK,SAAS,GAAG,2EAA2E,CAAA;EAC7F;EACA,IAAMC,aAAa,GAAG,YAAY,CAAA;;EAElC;EACA;EACO,SAASC,SAASA,CAACC,IAAI,EAAE;IAC5B,IAAMC,YAAY,GAAG,CAAC,CAAA;IACtB,IAAMC,SAAS,GAAG,CAAC,CAAA;EACnB;IACA,IAAMC,KAAK,GAAG,EAAE,CAAA;EAChB;EACA,EAAA,IAAIC,aAAa,CAAA;EACjB;EACA,EAAA,IAAIC,IAAI,CAAA;;EAER;EACA,EAAA,SAASC,gBAAgBA,CAACC,GAAG,EAAEC,KAAK,EAAE;MAClC,OAAO;EACHD,MAAAA,GAAG,EAAHA,GAAG;EACHE,MAAAA,IAAI,EAAER,YAAY;EAClBS,MAAAA,QAAQ,EAAE,EAAE;EACZF,MAAAA,KAAK,EAALA,KAAK;EACLG,MAAAA,MAAM,EAAE,IAAA;OACX,CAAA;EACL,GAAA;EAEA,EAAA,SAASC,KAAKA,CAACL,GAAG,EAAEC,KAAK,EAAE;EACvB;EACA,IAAA,IAAIK,IAAI,GAAGP,gBAAgB,CAACC,GAAG,EAAEC,KAAK,CAAC,CAAA;EACvC;MACA,IAAG,CAACH,IAAI,EAAE;EACNA,MAAAA,IAAI,GAAGQ,IAAI,CAAA;EACf,KAAA;EACA;EACA,IAAA,IAAGT,aAAa,EAAE;EACd;QACAS,IAAI,CAACF,MAAM,GAAGP,aAAa,CAAA;EAC3B;EACAA,MAAAA,aAAa,CAACM,QAAQ,CAACI,IAAI,CAACD,IAAI,CAAC,CAAA;EACrC,KAAA;EACAV,IAAAA,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC,CAAA;EAChB;EACAT,IAAAA,aAAa,GAAGS,IAAI,CAAA;EACxB,GAAA;IAEA,SAASE,KAAKA,CAACC,IAAI,EAAE;MACjBA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;EAC9B;EACAD,IAAAA,IAAI,IAAIZ,aAAa,CAACM,QAAQ,CAACI,IAAI,CAAC;EAChCL,MAAAA,IAAI,EAAEP,SAAS;EACfc,MAAAA,IAAI,EAAJA,IAAI;EACJL,MAAAA,MAAM,EAAEP,aAAAA;EACZ,KAAC,CAAC,CAAA;EACN,GAAA;IAEA,SAASc,GAAGA,CAACX,GAAG,EAAE;EACd;EACA;EACA,IAAWJ,KAAK,CAACgB,GAAG,GAAE;EACtB;MACAf,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACiB,MAAM,GAAG,CAAC,CAAC,CAAA;EAC3C,GAAA;IAEA,SAASC,OAAOA,CAACC,CAAC,EAAE;EAChBtB,IAAAA,IAAI,GAAGA,IAAI,CAACuB,SAAS,CAACD,CAAC,CAAC,CAAA;EAC5B,GAAA;IAEA,SAASE,aAAaA,GAAG;EACrB,IAAA,IAAMZ,KAAK,GAAGZ,IAAI,CAACyB,KAAK,CAAC/B,YAAY,CAAC,CAAA;EACtC,IAAA,IAAGkB,KAAK,EAAE;EACN,MAAA,IAAMa,KAAK,GAAG;EACV;EACAC,QAAAA,OAAO,EAAEd,KAAK,CAAC,CAAC,CAAC;EACjBJ,QAAAA,KAAK,EAAE,EAAA;SACV,CAAA;EACD;EACAa,MAAAA,OAAO,CAACT,KAAK,CAAC,CAAC,CAAC,CAACQ,MAAM,CAAC,CAAA;;EAExB;QACA,IAAIO,IAAI,EAAET,IAAG,CAAA;QACb,OAAM,EAAEA,IAAG,GAAGlB,IAAI,CAACyB,KAAK,CAAC3B,aAAa,CAAC,CAAC,KAAK6B,IAAI,GAAG3B,IAAI,CAACyB,KAAK,CAAC5B,SAAS,CAAC,CAAC,EAAE;EACxEwB,QAAAA,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAACP,MAAM,CAAC,CAAA;EACvBK,QAAAA,KAAK,CAACjB,KAAK,CAACM,IAAI,CAAC;EAAEc,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;EAAEE,UAAAA,KAAK,EAAEF,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EAAE,SAAC,CAAC,CAAA;EAC7E,OAAA;EACA;EACA,MAAA,IAAGT,IAAG,EAAE;EACJG,QAAAA,OAAO,CAACH,IAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAA;EAC1B,OAAA;EACA,MAAA,OAAOK,KAAK,CAAA;EAChB,KAAA;EACA;EACA,IAAA,OAAO,KAAK,CAAA;EAChB,GAAA;;EAEA;EACA,EAAA,OAAMzB,IAAI,EAAE;EACR;EACA;EACA,IAAA,IAAI8B,OAAO,GAAG9B,IAAI,CAAC+B,OAAO,CAAC,GAAG,CAAC,CAAA;MAC/B,IAAGD,OAAO,KAAK,CAAC,EAAE;EACd;EACA,MAAA,IAAME,aAAa,GAAGR,aAAa,EAAE,CAAA;EACrC,MAAA,IAAGQ,aAAa,EAAE;UACdpB,KAAK,CAACoB,aAAa,CAACN,OAAO,EAAEM,aAAa,CAACxB,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACJ,OAAA;EACA;EACA,MAAA,IAAMyB,WAAW,GAAGjC,IAAI,CAACyB,KAAK,CAAC7B,MAAM,CAAC,CAAA;EACtC,MAAA,IAAGqC,WAAW,EAAE;EACZZ,QAAAA,OAAO,CAACY,WAAW,CAAC,CAAC,CAAC,CAACb,MAAM,CAAC,CAAA;EAC9BF,QAAAA,GAAG,CAACe,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EACnB,QAAA,SAAA;EACJ,OAAA;EACJ,KAAA;MACA,IAAGH,OAAO,GAAG,CAAC,EAAE;EACZ;EACA;QACA,IAAId,IAAI,GAAGhB,IAAI,CAACuB,SAAS,CAAC,CAAC,EAAEO,OAAO,CAAC,CAAA;EACrC,MAAA,IAAGd,IAAI,EAAE;UACLD,KAAK,CAACC,IAAI,CAAC,CAAA;EACX;EACAK,QAAAA,OAAO,CAACL,IAAI,CAACI,MAAM,CAAC,CAAA;EACxB,OAAA;EACJ,KAAA;EACJ,GAAA;EACA,EAAA,OAAOf,IAAI,CAAA;EACf;;ECpIA,SAAS6B,QAAQA,CAAC1B,KAAK,EAAE;EACrB;IACA,IAAI2B,GAAG,GAAG,EAAE,CAAA;IAAC,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GACyB;EAClC,IAAA,IAAIT,IAAI,GAAGnB,KAAK,CAAC6B,CAAC,CAAC,CAAA;EACnB,IAAA,IAAGV,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;EACtB;QACA,IAAIU,GAAG,GAAG,EAAE,CAAA;EACZ;EACAX,MAAAA,IAAI,CAACE,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,UAAAC,IAAI,EAAI;EAClC,QAAA,IAAAC,WAAA,GAAmBD,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;YAAAI,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA7BG,UAAAA,GAAG,GAAAF,YAAA,CAAA,CAAA,CAAA;EAAEd,UAAAA,KAAK,GAAAc,YAAA,CAAA,CAAA,CAAA,CAAA;EACfL,QAAAA,GAAG,CAACO,GAAG,CAAC,GAAGhB,KAAK,CAAA;EACpB,OAAC,CAAC,CAAA;QACFF,IAAI,CAACE,KAAK,GAAGS,GAAG,CAAA;EACpB,KAAA;EACA;EACAH,IAAAA,GAAG,OAAA1C,MAAA,CAAOkC,IAAI,CAACC,IAAI,EAAAnC,IAAAA,CAAAA,CAAAA,MAAA,CAAKqD,IAAI,CAACC,SAAS,CAACpB,IAAI,CAACE,KAAK,CAAC,EAAG,GAAA,CAAA,CAAA;KACxD,CAAA;EAdD,EAAA,KAAI,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7B,KAAK,CAACY,MAAM,EAAEiB,CAAC,EAAE,EAAA;MAAAD,KAAA,EAAA,CAAA;EAAA,GAAA;EAepC;IACA,OAAA3C,GAAAA,CAAAA,MAAA,CAAW0C,GAAG,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC/B,CAAA;;EAEA;EACA,IAAMC,YAAY,GAAG,0BAA0B,CAAA;EAC/C,SAASC,GAAGA,CAACrC,IAAI,EAAE;EACf;EACA,EAAA,IAAGA,IAAI,CAACJ,IAAI,KAAK,CAAC,EAAE;MAChB,OAAO0C,OAAO,CAACtC,IAAI,CAAC,CAAA;EACxB,GAAC,MAAM;EACH;EACA,IAAA,IAAIG,IAAI,GAAGH,IAAI,CAACG,IAAI,CAAA;EACpB,IAAA,IAAG,CAACiC,YAAY,CAACG,IAAI,CAACpC,IAAI,CAAC,EAAE;EACzB;EACA,MAAA,OAAA,KAAA,CAAAvB,MAAA,CAAaqD,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EACrC,KAAC,MAAM;EACH;EACA;QACA,IAAIqC,MAAM,GAAG,EAAE,CAAA;EACf;EACA,MAAA,IAAI5B,KAAK,CAAA;EACT;QACAwB,YAAY,CAACK,SAAS,GAAG,CAAC,CAAA;EAC1B;QACA,IAAIA,SAAS,GAAG,CAAC,CAAA;QACjB,OAAM7B,KAAK,GAAGwB,YAAY,CAACM,IAAI,CAACvC,IAAI,CAAC,EAAE;EACnC;EACA;EACA,QAAA,IAAIwC,KAAK,GAAG/B,KAAK,CAAC+B,KAAK,CAAA;UACvB,IAAGA,KAAK,GAAGF,SAAS,EAAE;EAClBD,UAAAA,MAAM,CAACvC,IAAI,CAACgC,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAACgC,KAAK,CAACM,SAAS,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC7D,SAAA;EACA;EACAH,QAAAA,MAAM,CAACvC,IAAI,CAAArB,KAAAA,CAAAA,MAAA,CAAOgC,KAAK,CAAC,CAAC,CAAC,CAACgC,IAAI,EAAE,MAAG,CAAC,CAAA;UACrCH,SAAS,GAAGE,KAAK,GAAG/B,KAAK,CAAC,CAAC,CAAC,CAACL,MAAM,CAAA;EACvC,OAAA;EACA;EACA,MAAA,IAAGkC,SAAS,GAAGtC,IAAI,CAACI,MAAM,EAAE;EACxBiC,QAAAA,MAAM,CAACvC,IAAI,CAACgC,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAACgC,KAAK,CAACM,SAAS,CAAC,CAAC,CAAC,CAAA;EACtD,OAAA;EACA,MAAA,OAAA,KAAA,CAAA7D,MAAA,CAAa4D,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EACjC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEA,SAASC,WAAWA,CAACjD,QAAQ,EAAE;EAC3B,EAAA,OAAOA,QAAQ,GAAGA,QAAQ,CAACkD,GAAG,CAAC,UAAAC,KAAK,EAAA;MAAA,OAAIX,GAAG,CAACW,KAAK,CAAC,CAAA;EAAA,GAAA,CAAC,CAACH,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;EACtE,CAAA;EAEA,SAASP,OAAOA,CAACW,GAAG,EAAE;EAClB,EAAA,IAAIpD,QAAQ,GAAGiD,WAAW,CAACG,GAAG,CAACpD,QAAQ,CAAC,CAAA;EACxC;EACA;EACA,EAAA,IAAIqD,IAAI,GAAAtE,MAAAA,CAAAA,MAAA,CAAWqE,GAAG,CAACvD,GAAG,EAAAd,KAAAA,CAAAA,CAAAA,MAAA,CAAMqE,GAAG,CAACtD,KAAK,CAACY,MAAM,GAAG,CAAC,GAAGc,QAAQ,CAAC4B,GAAG,CAACtD,KAAK,CAAC,GAAG,MAAM,CAAAf,CAAAA,MAAA,CAAGqE,GAAG,CAACpD,QAAQ,CAACU,MAAM,GAAA3B,IAAAA,CAAAA,MAAA,CAAQiB,QAAQ,CAAA,GAAK,EAAE,EAAI,GAAA,CAAA,CAAA;EACpI,EAAA,OAAOqD,IAAI,CAAA;EACf,CAAA;;EAEA;EACO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EACxC;EACA,EAAA,IAAIH,GAAG,GAAG/D,SAAS,CAACkE,QAAQ,CAAC,CAAA;EAC7B;EACA,EAAA,IAAIF,IAAI,GAAGZ,OAAO,CAACW,GAAG,CAAC,CAAA;;EAEvB;EACAC,EAAAA,IAAI,GAAAtE,qBAAAA,CAAAA,MAAA,CAAyBsE,IAAI,EAAG,GAAA,CAAA,CAAA;EACpC,EAAA,IAAIG,MAAM,GAAG,IAAIC,QAAQ,CAACJ,IAAI,CAAC,CAAA;EAC/B;EACA,EAAA,OAAOG,MAAM,CAAA;EACjB;;EC1FA;EACA;EACA,IAAIE,IAAE,GAAG,CAAC,CAAA;EAAC,IACLC,GAAG,gBAAA,YAAA;EACL,EAAA,SAAAA,MAAc;EAAAC,IAAAA,eAAA,OAAAD,GAAA,CAAA,CAAA;EACV;EACA,IAAA,IAAI,CAACD,EAAE,GAAGA,IAAE,EAAE,CAAA;EACd;MACA,IAAI,CAACG,IAAI,GAAG,EAAE,CAAA;EAClB,GAAA;;EAEA;EACA;EACA;EACA;EACA;EAAAC,EAAAA,YAAA,CAAAH,GAAA,EAAA,CAAA;MAAAxB,GAAA,EAAA,QAAA;MAAAhB,KAAA,EACA,SAAA4C,MAAAA,GAAS;EACLJ,MAAAA,GAAG,CAACK,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAA;EAC3B,KAAA;EAAC,GAAA,EAAA;MAAA9B,GAAA,EAAA,QAAA;EAAAhB,IAAAA,KAAA,EAED,SAAA+C,MAAOC,CAAAA,OAAO,EAAE;EACZ,MAAA,IAAI,CAACN,IAAI,CAACzD,IAAI,CAAC+D,OAAO,CAAC,CAAA;EAC3B,KAAA;;EAEA;EAAA,GAAA,EAAA;MAAAhC,GAAA,EAAA,QAAA;MAAAhB,KAAA,EACA,SAAAiD,MAAAA,GAAS;EACL,MAAA,IAAI,CAACP,IAAI,CAAC/B,OAAO,CAAC,UAAAqC,OAAO,EAAA;EAAA,QAAA,OAAIA,OAAO,CAACE,MAAM,EAAE,CAAA;SAAC,CAAA,CAAA;EAClD,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAV,GAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGLA,GAAG,CAACK,MAAM,GAAG,IAAI,CAAA;EACjB;EACA,IAAIvE,KAAK,GAAG,EAAE,CAAA;EAEP,SAAS6E,UAAUA,CAACH,OAAO,EAAE;EAChC1E,EAAAA,KAAK,CAACW,IAAI,CAAC+D,OAAO,CAAC,CAAA;IACnBR,GAAG,CAACK,MAAM,GAAGG,OAAO,CAAA;EACxB,CAAA;EAEO,SAASI,SAASA,GAAG;IACxB9E,KAAK,CAACgB,GAAG,EAAE,CAAA;IACXkD,GAAG,CAACK,MAAM,GAAGvE,KAAK,CAACA,KAAK,CAACiB,MAAM,GAAG,CAAC,CAAC,CAAA;EACxC;;ECtCA;EACA;EACA;EACA;EACA;;EAEA,IAAIgD,EAAE,GAAG,CAAC,CAAA;EAAC,IACLc,OAAO,gBAAA,YAAA;IACT,SAAAA,OAAAA,CAAYC,EAAE,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,EAAE,EAAE;EAAAhB,IAAAA,eAAA,OAAAY,OAAA,CAAA,CAAA;EACnC,IAAA,IAAI,CAACd,EAAE,GAAGA,EAAE,EAAE,CAAA;EACd;MACA,IAAI,CAACmB,aAAa,GAAGF,OAAO,CAAA;;EAE5B;EACA;EACA,IAAA,IAAG,OAAOD,QAAQ,KAAK,QAAQ,EAAE;QAC7B,IAAI,CAACI,MAAM,GAAG,YAAW;UAAE,OAAOL,EAAE,CAACC,QAAQ,CAAC,CAAA;SAAG,CAAA;EACrD,KAAC,MAAM;QACH,IAAI,CAACI,MAAM,GAAGJ,QAAQ,CAAA;EAC1B,KAAA;;EAEA;MACA,IAAI,CAACK,IAAI,GAAG,EAAE,CAAA;EACd;EACA,IAAA,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,EAAE,CAAA;MACvB,IAAI,CAACR,EAAE,GAAGA,EAAE,CAAA;EACZ;EACA,IAAA,IAAI,CAACS,IAAI,GAAGP,OAAO,CAACO,IAAI,CAAA;EACxB,IAAA,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,IAAI,CAAA;MACtB,IAAI,CAACN,EAAE,GAAGA,EAAE,CAAA;EACZ,IAAA,IAAI,CAACQ,IAAI,GAAGT,OAAO,CAACS,IAAI,CAAA;EACxB;EACA,IAAA,IAAI,CAACjE,KAAK,GAAG,IAAI,CAAC+D,IAAI,GAAGG,SAAS,GAAG,IAAI,CAACC,GAAG,EAAE,CAAA;EACnD,GAAA;EAACxB,EAAAA,YAAA,CAAAU,OAAA,EAAA,CAAA;MAAArC,GAAA,EAAA,QAAA;EAAAhB,IAAAA,KAAA,EAED,SAAA8C,MAAOsB,CAAAA,GAAG,EAAE;EACR;EACA,MAAA,IAAI7B,EAAE,GAAG6B,GAAG,CAAC7B,EAAE,CAAA;QACf,IAAG,CAAC,IAAI,CAACsB,MAAM,CAACQ,GAAG,CAAC9B,EAAE,CAAC,EAAE;EACrB,QAAA,IAAI,CAACqB,IAAI,CAAC3E,IAAI,CAACmF,GAAG,CAAC,CAAA;EACnB,QAAA,IAAI,CAACP,MAAM,CAACS,GAAG,CAAC/B,EAAE,CAAC,CAAA;EACnB;EACA6B,QAAAA,GAAG,CAACrB,MAAM,CAAC,IAAI,CAAC,CAAA;EACpB,OAAA;EACJ,KAAA;;EAEA;EAAA,GAAA,EAAA;MAAA/B,GAAA,EAAA,UAAA;MAAAhB,KAAA,EACA,SAAAuE,QAAAA,GAAW;EACP;EACA,MAAA,IAAI,CAACvE,KAAK,GAAG,IAAI,CAACmE,GAAG,EAAE,CAAA;QACvB,IAAI,CAACH,KAAK,GAAG,KAAK,CAAA;EACtB,KAAA;EAAC,GAAA,EAAA;MAAAhD,GAAA,EAAA,KAAA;MAAAhB,KAAA,EAED,SAAAmE,GAAAA,GAAM;EACF;QACAhB,UAAU,CAAC,IAAI,CAAC,CAAA;EAChB;EACA;EACA;QACA,IAAInD,KAAK,GAAG,IAAI,CAAC2D,MAAM,CAACa,IAAI,CAAC,IAAI,CAAClB,EAAE,CAAC,CAAA;EACrC;EACAF,MAAAA,SAAS,EAAE,CAAA;EACX,MAAA,OAAOpD,KAAK,CAAA;EAChB,KAAA;;EAEA;EAAA,GAAA,EAAA;MAAAgB,GAAA,EAAA,QAAA;MAAAhB,KAAA,EACA,SAAA4C,MAAAA,GAAS;EACL,MAAA,IAAIpC,CAAC,GAAG,IAAI,CAACoD,IAAI,CAACrE,MAAM,CAAA;QACxB,OAAMiB,CAAC,EAAE,EAAE;UACP,IAAI,CAACoD,IAAI,CAACpD,CAAC,CAAC,CAACoC,MAAM,EAAE,CAAA;EACzB,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAA5B,GAAA,EAAA,QAAA;MAAAhB,KAAA,EAED,SAAAkD,MAAAA,GAAS;EACLuB,MAAAA,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;QAC9B,IAAG,IAAI,CAACX,IAAI,EAAE;EACV;UACA,IAAI,CAACC,KAAK,GAAG,IAAI,CAAA;EACrB,OAAC,MAAM;EACH;EACA;UACAW,YAAY,CAAC,IAAI,CAAC,CAAA;EACtB,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAA3D,GAAA,EAAA,KAAA;MAAAhB,KAAA,EAED,SAAA4E,GAAAA,GAAM;EACF;EACA,MAAA,IAAIC,QAAQ,GAAG,IAAI,CAAC7E,KAAK,CAAA;EACzB;EACA;EACA,MAAA,IAAI8E,QAAQ,GAAG,IAAI,CAACX,GAAG,EAAE,CAAA;EACzB;QACA,IAAG,IAAI,CAACF,IAAI,EAAE;EACV,QAAA,IAAI,CAACR,EAAE,CAACe,IAAI,CAAC,IAAI,CAAClB,EAAE,EAAEwB,QAAQ,EAAED,QAAQ,CAAC,CAAA;EAC7C,OAAA;EACJ,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAxB,OAAA,CAAA;EAAA,CAGL,EAAA,CAAA;EACA,IAAI0B,KAAK,GAAG,EAAE,CAAA;EACd;EACA,IAAIV,GAAG,GAAG,EAAE,CAAA;EACZ;EACA,IAAIW,OAAO,GAAG,KAAK,CAAA;EACnB,SAASC,mBAAmBA,GAAG;EAC3B,EAAA,IAAIC,UAAU,GAAGH,KAAK,CAAC5D,KAAK,CAAC,CAAC,CAAC,CAAA;EAC/B;EACA4D,EAAAA,KAAK,GAAG,EAAE,CAAA;IACVV,GAAG,GAAG,EAAE,CAAA;EACRW,EAAAA,OAAO,GAAG,KAAK,CAAA;EACf;EACAE,EAAAA,UAAU,CAACvE,OAAO,CAAC,UAAAwE,CAAC,EAAA;EAAA,IAAA,OAAIA,CAAC,CAACP,GAAG,EAAE,CAAA;KAAC,CAAA,CAAA;EACpC,CAAA;EACA,SAASD,YAAYA,CAAC3B,OAAO,EAAE;EAC3B,EAAA,IAAMT,EAAE,GAAGS,OAAO,CAACT,EAAE,CAAA;EACrB,EAAA,IAAG,CAAC8B,GAAG,CAAC9B,EAAE,CAAC,EAAE;EACTwC,IAAAA,KAAK,CAAC9F,IAAI,CAAC+D,OAAO,CAAC,CAAA;EACnBqB,IAAAA,GAAG,CAAC9B,EAAE,CAAC,GAAG,IAAI,CAAA;EACd;MACA,IAAG,CAACyC,OAAO,EAAE;QACTI,QAAQ,CAACH,mBAAmB,CAAC,CAAA;EAC7BD,MAAAA,OAAO,GAAG,IAAI,CAAA;EAClB,KAAA;EACJ,GAAA;EACJ,CAAA;;EAEA;EACA,IAAIK,SAAS,GAAG,EAAE,CAAA;EAClB;EACA,IAAIC,OAAO,GAAG,KAAK,CAAA;EACnB;EACA,SAASC,cAAcA,GAAG;EACtB,EAAA,IAAIC,GAAG,GAAGH,SAAS,CAAClE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC5B;EACAmE,EAAAA,OAAO,GAAG,KAAK,CAAA;EACfD,EAAAA,SAAS,GAAG,EAAE,CAAA;EACdG,EAAAA,GAAG,CAAC7E,OAAO,CAAC,UAAA8C,EAAE,EAAA;MAAA,OAAIA,EAAE,EAAE,CAAA;KAAC,CAAA,CAAA;EAC3B,CAAA;;EAEA;EACA,IAAIgC,SAAS,CAAA;EACb,IAAGC,OAAO,EAAE;IACRD,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACdC,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAACL,cAAc,CAAC,CAAA;KACzC,CAAA;EACL,CAAC,MAAM,IAAGM,gBAAgB,EAAE;EACxB;EACA,EAAA,IAAIC,QAAQ,GAAG,IAAID,gBAAgB,CAACN,cAAc,CAAC,CAAA;EACnD,EAAA,IAAIQ,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,CAAC,CAAC,CAAA;EACzCH,EAAAA,QAAQ,CAACI,OAAO,CAACH,QAAQ,EAAE;EACvBI,IAAAA,aAAa,EAAE,IAAA;EACnB,GAAC,CAAC,CAAA;IACFV,SAAS,GAAG,SAAAA,SAAAA,GAAM;EACd;MACAM,QAAQ,CAACK,WAAW,GAAG,CAAC,CAAA;KAC3B,CAAA;EACL,CAAC,MAAM,IAAGC,YAAY,EAAE;IACpBZ,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACdY,YAAY,CAACd,cAAc,CAAC,CAAA;KAC/B,CAAA;EACL,CAAC,MAAM;IACHE,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACda,UAAU,CAACf,cAAc,CAAC,CAAA;KAC7B,CAAA;EACL,CAAA;;EAEA;EACA;EACO,SAASH,QAAQA,CAAC3B,EAAE,EAAE;EACzB4B,EAAAA,SAAS,CAACpG,IAAI,CAACwE,EAAE,CAAC,CAAA;IAClB,IAAG,CAAC6B,OAAO,EAAE;EACTG,IAAAA,SAAS,EAAE,CAAA;EACXH,IAAAA,OAAO,GAAG,IAAI,CAAA;EAClB,GAAA;EACJ;;EClLA;EACO,SAASiB,kBAAkBA,CAACjD,EAAE,EAAE5E,GAAG,EAAE8H,IAAI,EAAe;EAC3D,EAAA,IAAGA,IAAI,IAAI,IAAI,EAAEA,IAAI,GAAG,EAAE,CAAA;EAC1B,EAAA,IAAIxF,GAAG,GAAGwF,IAAI,CAACxF,GAAG,CAAA;EAClB,EAAA,IAAGA,GAAG,EAAE;MACJ,OAAOwF,IAAI,CAACxF,GAAG,CAAA;EACnB,GAAA;IAAC,KAAAyF,IAAAA,IAAA,GAAAC,SAAA,CAAAnH,MAAA,EALgDV,QAAQ,OAAA8H,KAAA,CAAAF,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAR/H,IAAAA,QAAQ,CAAA+H,IAAA,GAAAF,CAAAA,CAAAA,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,GAAA;IAMzD,OAAOC,KAAK,CAACvD,EAAE,EAAE5E,GAAG,EAAEsC,GAAG,EAAEwF,IAAI,EAAE3H,QAAQ,CAAC,CAAA;EAC9C,CAAA;EAEO,SAASiI,eAAeA,CAACxD,EAAE,EAAEnE,IAAI,EAAE;EACtC,EAAA,OAAO0H,KAAK,CAACvD,EAAE,EAAEY,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAE/E,IAAI,CAAC,CAAA;EACtE,CAAA;;EAEA;EACA;EACA,SAAS0H,KAAKA,CAACvD,EAAE,EAAE5E,GAAG,EAAEsC,GAAG,EAAEwF,IAAI,EAAE3H,QAAQ,EAAEM,IAAI,EAAE;IAC/C,OAAO;EACHmE,IAAAA,EAAE,EAAFA,EAAE;EACF5E,IAAAA,GAAG,EAAHA,GAAG;EACHsC,IAAAA,GAAG,EAAHA,GAAG;EACHwF,IAAAA,IAAI,EAAJA,IAAI;EACJ3H,IAAAA,QAAQ,EAARA,QAAQ;EACRM,IAAAA,IAAI,EAAJA,IAAAA;KACH,CAAA;EACL,CAAA;EAEO,SAAS4H,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAE;EACxC,EAAA,OAAOD,MAAM,CAACtI,GAAG,KAAKuI,MAAM,CAACvI,GAAG,IAAIsI,MAAM,CAAChG,GAAG,KAAKiG,MAAM,CAACjG,GAAG,CAAA;EACjE;;EC3BA,SAASkG,UAAUA,CAACC,EAAE,EAA6B;EAAA,EAAA,IAA3BC,QAAQ,GAAAV,SAAA,CAAAnH,MAAA,GAAA,CAAA,IAAAmH,SAAA,CAAA,CAAA,CAAA,KAAAxC,SAAA,GAAAwC,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EAAA,EAAA,IAAEW,KAAK,GAAAX,SAAA,CAAAnH,MAAA,GAAA,CAAA,IAAAmH,SAAA,CAAA,CAAA,CAAA,KAAAxC,SAAA,GAAAwC,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EAC7C;EACA,EAAA,IAAIY,SAAS,GAAGF,QAAQ,CAACG,KAAK,IAAI,EAAE,CAAA;EACpC,EAAA,IAAIC,SAAS,GAAGH,KAAK,CAACE,KAAK,IAAI,EAAE,CAAA;EACjC;EACA,EAAA,KAAI,IAAIvG,GAAG,IAAIsG,SAAS,EAAE;EACtB,IAAA,IAAG,CAACE,SAAS,CAACxG,GAAG,CAAC,EAAE;EAChBmG,MAAAA,EAAE,CAACI,KAAK,CAACvG,GAAG,CAAC,GAAG,EAAE,CAAA;EACtB,KAAA;EACJ,GAAA;;EAEA;EACA,EAAA,KAAI,IAAIA,IAAG,IAAIoG,QAAQ,EAAE;EACrB,IAAA,IAAG,CAACC,KAAK,CAACrG,IAAG,CAAC,EAAE;EACZmG,MAAAA,EAAE,CAACM,eAAe,CAACzG,IAAG,CAAC,CAAA;EAC3B,KAAA;EACJ,GAAA;EAEA,EAAA,KAAI,IAAIA,KAAG,IAAIqG,KAAK,EAAE;MAClB,IAAGrG,KAAG,KAAK,OAAO,EAAE;EAChB,MAAA,KAAI,IAAI0G,SAAS,IAAIL,KAAK,CAAC,OAAO,CAAC,EAAE;EACjCF,QAAAA,EAAE,CAACI,KAAK,CAACG,SAAS,CAAC,GAAGL,KAAK,CAAC,OAAO,CAAC,CAACK,SAAS,CAAC,CAAA;EACnD,OAAA;EACJ,KAAC,MAAM;QACHP,EAAE,CAACQ,YAAY,CAAC3G,KAAG,EAAEqG,KAAK,CAACrG,KAAG,CAAC,CAAC,CAAA;EACpC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEO,SAAS4G,SAASA,CAACf,KAAK,EAAE;EAC7B,EAAA,IAAMnI,GAAG,GAA2BmI,KAAK,CAAnCnI,GAAG;MAAE8H,IAAI,GAAqBK,KAAK,CAA9BL,IAAI;MAAE3H,QAAQ,GAAWgI,KAAK,CAAxBhI,QAAQ;MAAEM,IAAI,GAAK0H,KAAK,CAAd1H,IAAI,CAAA;EAC/B;EACA,EAAA,IAAG,OAAOT,GAAG,KAAK,QAAQ,EAAE;EACxB;MACAmI,KAAK,CAACM,EAAE,GAAGnB,QAAQ,CAAC6B,aAAa,CAACnJ,GAAG,CAAC,CAAA;MACtCwI,UAAU,CAACL,KAAK,CAACM,EAAE,EAAE,EAAE,EAAEX,IAAI,CAAC,CAAA;EAC9B3H,IAAAA,QAAQ,CAAC8B,OAAO,CAAC,UAAAqB,KAAK,EAAI;EACtB,MAAA,IAAM8F,QAAQ,GAAGF,SAAS,CAAC5F,KAAK,CAAC,CAAA;EACjC6E,MAAAA,KAAK,CAACM,EAAE,CAACY,WAAW,CAACD,QAAQ,CAAC,CAAA;EAClC,KAAC,CAAC,CAAA;EACN,GAAC,MAAM;MACHjB,KAAK,CAACM,EAAE,GAAGnB,QAAQ,CAACC,cAAc,CAAC9G,IAAI,CAAC,CAAA;EAC5C,GAAA;IACA,OAAO0H,KAAK,CAACM,EAAE,CAAA;EACnB,CAAA;;EAEA;EACO,SAASa,KAAKA,CAACC,QAAQ,EAAEpB,KAAK,EAAE;EACnC;EACA,EAAA,IAAMqB,aAAa,GAAGD,QAAQ,CAACE,QAAQ,CAAA;EACvC,EAAA,IAAGD,aAAa,EAAE;EACd;MACA,IAAME,GAAG,GAAGH,QAAQ,CAAA;EACpB;EACA,IAAA,IAAMI,SAAS,GAAGD,GAAG,CAACE,UAAU,CAAA;EAChC;EACA,IAAA,IAAIC,MAAM,GAAGX,SAAS,CAACf,KAAK,CAAC,CAAA;EAC7B;MACAwB,SAAS,CAACG,YAAY,CAACD,MAAM,EAAEH,GAAG,CAACK,WAAW,CAAC,CAAA;EAC/C;EACAJ,IAAAA,SAAS,CAACK,WAAW,CAACN,GAAG,CAAC,CAAA;EAE1B,IAAA,OAAOG,MAAM,CAAA;EACjB,GAAC,MAAM;EACH;EACA;EACA;EACA;EACA,IAAA,OAAOI,UAAU,CAACV,QAAQ,EAAEpB,KAAK,CAAC,CAAA;EACtC,GAAA;EACJ,CAAA;EAEA,SAAS8B,UAAUA,CAACV,QAAQ,EAAEpB,KAAK,EAAE;EACjC,EAAA,IAAG,CAACE,WAAW,CAACkB,QAAQ,EAAEpB,KAAK,CAAC,EAAE;EAC9B;EACA,IAAA,IAAIM,GAAE,GAAGS,SAAS,CAACf,KAAK,CAAC,CAAA;EACzBoB,IAAAA,QAAQ,CAACd,EAAE,CAACmB,UAAU,CAACM,YAAY,CAACzB,GAAE,EAAEc,QAAQ,CAACd,EAAE,CAAC,CAAA;EACpD,IAAA,OAAOA,GAAE,CAAA;EACb,GAAA;EACA;EACA;IACA,IAAIA,EAAE,GAAGN,KAAK,CAACM,EAAE,GAAGc,QAAQ,CAACd,EAAE,CAAA;EAC/B;EACA,EAAA,IAAG,CAACc,QAAQ,CAACvJ,GAAG,EAAE;EACd,IAAA,IAAGuJ,QAAQ,CAAC9I,IAAI,KAAK0H,KAAK,CAAC1H,IAAI,EAAE;EAC7B;EACAgI,MAAAA,EAAE,CAACf,WAAW,GAAGS,KAAK,CAAC1H,IAAI,CAAA;EAC/B,KAAA;EACJ,GAAA;EACA;IACA+H,UAAU,CAACC,EAAE,EAAEc,QAAQ,CAACzB,IAAI,EAAEK,KAAK,CAACL,IAAI,CAAC,CAAA;;EAEzC;EACA,EAAA,IAAIqC,WAAW,GAAGZ,QAAQ,CAACpJ,QAAQ,IAAI,EAAE,CAAA;EACzC,EAAA,IAAIiK,WAAW,GAAGjC,KAAK,CAAChI,QAAQ,IAAI,EAAE,CAAA;;EAEtC;IACA,IAAGgK,WAAW,CAACtJ,MAAM,GAAG,CAAC,IAAIuJ,WAAW,CAACvJ,MAAM,GAAG,CAAC,EAAE;EACjDwJ,IAAAA,cAAc,CAAC5B,EAAE,EAAE0B,WAAW,EAAEC,WAAW,CAAC,CAAA;EAChD,GAAA;EACA;EAAA,OACK,IAAGA,WAAW,CAACvJ,MAAM,GAAG,CAAC,EAAE;EAC5ByJ,IAAAA,aAAa,CAAC7B,EAAE,EAAE2B,WAAW,CAAC,CAAA;EAClC,GAAA;EACA;EAAA,OACK,IAAGD,WAAW,CAACtJ,MAAM,GAAG,CAAC,EAAE;EAC5B;MACA4H,EAAE,CAAC8B,SAAS,GAAG,EAAE,CAAA;EACrB,GAAA;EACA,EAAA,OAAO9B,EAAE,CAAA;EACb,CAAA;EAEA,SAAS6B,aAAaA,CAAC7B,EAAE,EAAE2B,WAAW,EAAE;EACpC,EAAA,KAAI,IAAItI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsI,WAAW,CAACvJ,MAAM,EAAEiB,CAAC,EAAE,EAAE;EACxC,IAAA,IAAIwB,KAAK,GAAG8G,WAAW,CAACtI,CAAC,CAAC,CAAA;EAC1B2G,IAAAA,EAAE,CAACY,WAAW,CAACH,SAAS,CAAC5F,KAAK,CAAC,CAAC,CAAA;EACpC,GAAA;EACJ,CAAA;EAEA,SAAS+G,cAAcA,CAAC5B,EAAE,EAAE0B,WAAW,EAAEC,WAAW,EAAE;EAClD;IACA,IAAII,aAAa,GAAG,CAAC,CAAA;IACrB,IAAIC,aAAa,GAAG,CAAC,CAAA;EACrB,EAAA,IAAIC,WAAW,GAAGP,WAAW,CAACtJ,MAAM,GAAG,CAAC,CAAA;EACxC,EAAA,IAAI8J,WAAW,GAAGP,WAAW,CAACvJ,MAAM,GAAG,CAAC,CAAA;EAExC,EAAA,IAAI+J,aAAa,GAAGT,WAAW,CAACK,aAAa,CAAC,CAAA;EAC9C,EAAA,IAAIK,aAAa,GAAGT,WAAW,CAACK,aAAa,CAAC,CAAA;EAE9C,EAAA,IAAIK,WAAW,GAAGX,WAAW,CAACO,WAAW,CAAC,CAAA;EAC1C,EAAA,IAAIK,WAAW,GAAGX,WAAW,CAACO,WAAW,CAAC,CAAA;;EAE1C;IACA,SAASK,cAAcA,CAAC7K,QAAQ,EAAE;MAC9B,IAAIkD,GAAG,GAAG,EAAE,CAAA;EACZlD,IAAAA,QAAQ,CAAC8B,OAAO,CAAC,UAACqB,KAAK,EAAEL,KAAK,EAAK;EAC/BI,MAAAA,GAAG,CAACC,KAAK,CAAChB,GAAG,CAAC,GAAGW,KAAK,CAAA;EAC1B,KAAC,CAAC,CAAA;EACF,IAAA,OAAOI,GAAG,CAAA;EACd,GAAA;EAEA,EAAA,IAAIA,GAAG,GAAG2H,cAAc,CAACb,WAAW,CAAC,CAAA;;EAErC;EACA;EACA,EAAA,OAAMK,aAAa,IAAIE,WAAW,IAAID,aAAa,IAAIE,WAAW,EAAE;EAChE;MACA,IAAG,CAACC,aAAa,EAAE;EACfA,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;EAChD,KAAA;EACA;WACK,IAAG,CAACM,WAAW,EAAE;EAClBA,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAW,CAAC,CAAA;EAC5C,KAAA;EACA;EAAA,SACK,IAAGrC,WAAW,CAACuC,aAAa,EAAEC,aAAa,CAAC,EAAE;EAC/CZ,MAAAA,UAAU,CAACW,aAAa,EAAEC,aAAa,CAAC,CAAA;EACxCD,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;EAC5CK,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;EAChD,KAAA;EACA;EAAA,SACK,IAAGpC,WAAW,CAACyC,WAAW,EAAEC,WAAW,CAAC,EAAE;EAC3Cd,MAAAA,UAAU,CAACa,WAAW,EAAEC,WAAW,CAAC,CAAA;EACpCD,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAW,CAAC,CAAA;EACxCK,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAW,CAAC,CAAA;EAC5C,KAAA;EACA;EAAA,SACK,IAAGtC,WAAW,CAACyC,WAAW,EAAED,aAAa,CAAC,EAAE;EAC7CZ,MAAAA,UAAU,CAACa,WAAW,EAAED,aAAa,CAAC,CAAA;EACtC;QACApC,EAAE,CAACqB,YAAY,CAACgB,WAAW,CAACrC,EAAE,EAAEmC,aAAa,CAACnC,EAAE,CAAC,CAAA;EACjDqC,MAAAA,WAAW,GAAGX,WAAW,CAAC,EAAEO,WAAW,CAAC,CAAA;EACxCG,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;EAChD,KAAA;EACA;EAAA,SACK,IAAGpC,WAAW,CAACuC,aAAa,EAAEG,WAAW,CAAC,EAAE;EAC7Cd,MAAAA,UAAU,CAACW,aAAa,EAAEG,WAAW,CAAC,CAAA;EACtC;EACAtC,MAAAA,EAAE,CAACqB,YAAY,CAACc,aAAa,CAACnC,EAAE,EAAEqC,WAAW,CAACrC,EAAE,CAACsB,WAAW,CAAC,CAAA;EACjE,KAAA;EACA;EACA;EACA;WACK;EACD,MAAA,IAAIkB,SAAS,GAAG5H,GAAG,CAACwH,aAAa,CAACvI,GAAG,CAAC,CAAA;EACtC;QACA,IAAG2I,SAAS,KAAKzF,SAAS,EAAE;EACxB,QAAA,IAAI0F,SAAS,GAAGf,WAAW,CAACc,SAAS,CAAC,CAAA;UACtCxC,EAAE,CAACqB,YAAY,CAACoB,SAAS,CAACzC,EAAE,EAAEmC,aAAa,CAACnC,EAAE,CAAC,CAAA;EAC/C;EACA0B,QAAAA,WAAW,CAACc,SAAS,CAAC,GAAGzF,SAAS,CAAA;EAClCyE,QAAAA,UAAU,CAACiB,SAAS,EAAEL,aAAa,CAAC,CAAA;EACxC,OAAA;EACA;aACK;UACDpC,EAAE,CAACqB,YAAY,CAACZ,SAAS,CAAC2B,aAAa,CAAC,EAAED,aAAa,CAACnC,EAAE,CAAC,CAAA;EAC/D,OAAA;EACA;EACAoC,MAAAA,aAAa,GAAGT,WAAW,CAAC,EAAEK,aAAa,CAAC,CAAA;EAChD,KAAA;EACJ,GAAA;EACA;IACA,IAAGA,aAAa,IAAIE,WAAW,EAAE;MAC7B,KAAI,IAAI7I,CAAC,GAAG2I,aAAa,EAAE3I,CAAC,IAAI6I,WAAW,EAAE7I,CAAC,EAAE,EAAE;QAC9C,IAAIqJ,OAAO,GAAGjC,SAAS,CAACkB,WAAW,CAACtI,CAAC,CAAC,CAAC,CAAA;EACvC;EACA;EACA;EACA,MAAA,IAAIsJ,MAAM,GAAGhB,WAAW,CAACO,WAAW,GAAG,CAAC,CAAC,GAAGP,WAAW,CAACO,WAAW,GAAG,CAAC,CAAC,CAAClC,EAAE,GAAG,IAAI,CAAA;EAClFA,MAAAA,EAAE,CAACqB,YAAY,CAACqB,OAAO,EAAEC,MAAM,CAAC,CAAA;EACpC,KAAA;EACJ,GAAA;EACA;IACA,IAAGZ,aAAa,IAAIE,WAAW,EAAE;MAC7B,KAAI,IAAI5I,EAAC,GAAG0I,aAAa,EAAE1I,EAAC,IAAI4I,WAAW,EAAE5I,EAAC,EAAE,EAAE;EAC9C;EACA,MAAA,IAAGqI,WAAW,CAACrI,EAAC,CAAC,EAAE;EACf,QAAA,IAAIqJ,QAAO,GAAGhB,WAAW,CAACrI,EAAC,CAAC,CAAC2G,EAAE,CAAA;EAC/BA,QAAAA,EAAE,CAACuB,WAAW,CAACmB,QAAO,CAAC,CAAA;EAC3B,OAAA;EACJ,KAAA;EACJ,GAAA;EACJ;;EC5NO,SAASE,aAAaA,CAACC,GAAG,EAAE;EAC/BA,EAAAA,GAAG,CAACC,SAAS,CAACC,OAAO,GAAG,UAASrD,KAAK,EAAE;MACpC,IAAMvD,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAM6D,EAAE,GAAG7D,EAAE,CAAC6G,GAAG,CAAA;EACjB;MACA7G,EAAE,CAAC6G,GAAG,GAAGnC,KAAK,CAACb,EAAE,EAAEN,KAAK,CAAC,CAAA;KAC5B,CAAA;;EAED;EACAmD,EAAAA,GAAG,CAACC,SAAS,CAACG,EAAE,GAAG,YAAW;EAC1B,IAAA,OAAO7D,kBAAkB,CAAA8D,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAzM,MAAA,CAAA+I,KAAA,CAAAsD,SAAA,CAAA9I,KAAA,CAAAqD,IAAA,CAAKkC,SAAS,CAAC,CAAA,CAAA,CAAA;KAChD,CAAA;;EAED;EACAsD,EAAAA,GAAG,CAACC,SAAS,CAACK,EAAE,GAAG,YAAW;EAC1B,IAAA,OAAOxD,eAAe,CAAAuD,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAzM,MAAA,CAAA+I,KAAA,CAAAsD,SAAA,CAAA9I,KAAA,CAAAqD,IAAA,CAAKkC,SAAS,CAAC,CAAA,CAAA,CAAA;KAC7C,CAAA;EAEDsD,EAAAA,GAAG,CAACC,SAAS,CAACM,EAAE,GAAG,UAASvK,KAAK,EAAE;EAC/B,IAAA,IAAGwK,OAAA,CAAOxK,KAAK,MAAK,QAAQ,EAAE,OAAOA,KAAK,CAAA;EAC1C,IAAA,OAAOiB,IAAI,CAACC,SAAS,CAAClB,KAAK,CAAC,CAAA;KAC/B,CAAA;EAEDgK,EAAAA,GAAG,CAACC,SAAS,CAACQ,OAAO,GAAG,YAAW;EAC/B;MACA,IAAMnH,EAAE,GAAG,IAAI,CAAA;EACf;MACA,OAAOA,EAAE,CAACoH,QAAQ,CAACrI,MAAM,CAACmC,IAAI,CAAC,IAAI,CAAC,CAAA;KACvC,CAAA;EACL,CAAA;EAEO,SAASmG,cAAcA,CAACrH,EAAE,EAAE6D,EAAE,EAAE;EACnC;IACA7D,EAAE,CAAC6G,GAAG,GAAGhD,EAAE,CAAA;EACX;EACA,EAAA,IAAMyD,eAAe,GAAG,SAAlBA,eAAeA,GAAS;MAC1BtH,EAAE,CAAC4G,OAAO,CAAC5G,EAAE,CAACmH,OAAO,EAAE,CAAC,CAAA;KAC3B,CAAA;IACe,IAAIpH,OAAO,CAACC,EAAE,EAAEsH,eAAe,EAAE,IAAI,EAAC;EACtD;EACA;EACJ,CAAA;;EAEA;EACA;EACA;EACA;EACA;;ECnDA;EACA,IAAIC,aAAa,GAAGlE,KAAK,CAACsD,SAAS,CAAA;EACnC;EACA;EACO,IAAIa,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACH,aAAa,CAAC,CAAA;;EAEvD;EACA,IAAMI,OAAO,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;EAChFA,OAAO,CAACtK,OAAO,CAAC,UAAAuK,MAAM,EAAI;EACtB;EACAJ,EAAAA,aAAa,CAACI,MAAM,CAAC,GAAG,YAAkB;EAAA,IAAA,IAAAC,qBAAA,CAAA;EAAA,IAAA,KAAA,IAAA1E,IAAA,GAAAC,SAAA,CAAAnH,MAAA,EAAN6L,IAAI,GAAAzE,IAAAA,KAAA,CAAAF,IAAA,GAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAJwE,MAAAA,IAAI,CAAAxE,IAAA,CAAAF,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,KAAA;EACpC;EACA;MACA,IAAMyE,MAAM,GAAG,CAAAF,qBAAA,GAAAN,aAAa,CAACK,MAAM,CAAC,EAAC1G,IAAI,CAAA6F,KAAA,CAAAc,qBAAA,EAAA,CAAC,IAAI,CAAAvN,CAAAA,MAAA,CAAKwN,IAAI,CAAC,CAAA,CAAA;;EAExD;EACA,IAAA,IAAIE,QAAQ,CAAA;EACZ,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACpB,IAAA,QAAON,MAAM;EACT,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACVI,QAAAA,QAAQ,GAAGF,IAAI,CAAA;EACf,QAAA,MAAA;EACJ,MAAA,KAAK,QAAQ;EACT;EACAE,QAAAA,QAAQ,GAAGF,IAAI,CAACjK,KAAK,CAAC,CAAC,CAAC,CAAA;EACxB,QAAA,MAAA;EAGR,KAAA;;EAEA;EACA,IAAA,IAAGmK,QAAQ,EAAE;EACTC,MAAAA,EAAE,CAACE,YAAY,CAACH,QAAQ,CAAC,CAAA;EAC7B,KAAA;;EAEA;EACAC,IAAAA,EAAE,CAACnH,GAAG,CAACnB,MAAM,EAAE,CAAA;EAEf,IAAA,OAAOoI,MAAM,CAAA;KAChB,CAAA;EACL,CAAC,CAAC;;ECxCsB,IAElBK,QAAQ,gBAAA,YAAA;EACV;IACA,SAAAA,QAAAA,CAAYlF,IAAI,EAAE;EAAA/D,IAAAA,eAAA,OAAAiJ,QAAA,CAAA,CAAA;EAEd;EACA;EACA;EACA;EACA;EACA,IAAA,IAAI,CAACtH,GAAG,GAAG,IAAI5B,GAAG,EAAE,CAAA;;EAEpB;EACA;EACA;EACA;EACAuI,IAAAA,MAAM,CAACY,cAAc,CAACnF,IAAI,EAAE,QAAQ,EAAE;EAClCxG,MAAAA,KAAK,EAAE,IAAI;EACX4L,MAAAA,UAAU,EAAE,KAAA;EAChB,KAAC,CAAC,CAAA;EAEF,IAAA,IAAGjF,KAAK,CAACkF,OAAO,CAACrF,IAAI,CAAC,EAAE;EACpB;;EAEA;QACAA,IAAI,CAACsF,SAAS,GAAGhB,aAAa,CAAA;EAC9B;EACA,MAAA,IAAI,CAACW,YAAY,CAACjF,IAAI,CAAC,CAAA;EAC3B,KAAC,MAAM;EACH,MAAA,IAAI,CAACuF,IAAI,CAACvF,IAAI,CAAC,CAAA;EACnB,KAAA;EACJ,GAAA;EAAC7D,EAAAA,YAAA,CAAA+I,QAAA,EAAA,CAAA;MAAA1K,GAAA,EAAA,MAAA;EAAAhB,IAAAA,KAAA,EAED,SAAA+L,IAAKvF,CAAAA,IAAI,EAAE;EAAK;EACZ;QACAuE,MAAM,CAACiB,IAAI,CAACxF,IAAI,CAAC,CAAC7F,OAAO,CAAC,UAAAK,GAAG,EAAA;UAAA,OAAIiL,cAAc,CAACzF,IAAI,EAAExF,GAAG,EAAEwF,IAAI,CAACxF,GAAG,CAAC,CAAC,CAAA;SAAC,CAAA,CAAA;EAC1E,KAAA;EAAC,GAAA,EAAA;MAAAA,GAAA,EAAA,cAAA;EAAAhB,IAAAA,KAAA,EAED,SAAAyL,YAAajF,CAAAA,IAAI,EAAE;EACfA,MAAAA,IAAI,CAAC7F,OAAO,CAAC,UAAAC,IAAI,EAAA;UAAA,OAAIsF,OAAO,CAACtF,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACvC,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA8K,QAAA,CAAA;EAAA,CAGL,EAAA,CAAA;EACA,SAASQ,WAAWA,CAAClM,KAAK,EAAE;EACxB,EAAA,KAAI,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACT,MAAM,EAAEiB,CAAC,EAAE,EAAE;EAClC,IAAA,IAAI2L,OAAO,GAAGnM,KAAK,CAACQ,CAAC,CAAC,CAAA;MACtB2L,OAAO,CAACX,MAAM,IAAIW,OAAO,CAACX,MAAM,CAACpH,GAAG,CAACxB,MAAM,EAAE,CAAA;EAC7C,IAAA,IAAG+D,KAAK,CAACkF,OAAO,CAACM,OAAO,CAAC,EAAE;QACvBD,WAAW,CAACC,OAAO,CAAC,CAAA;EACxB,KAAA;EACJ,GAAA;EACJ,CAAA;EAEO,SAASF,cAAcA,CAACpJ,MAAM,EAAE7B,GAAG,EAAEhB,KAAK,EAAE;EAC/C;EACA,EAAA,IAAIoM,OAAO,GAAGlG,OAAO,CAAClG,KAAK,CAAC,CAAA;EAC5B;;EAEA;EACA,EAAA,IAAIoE,GAAG,GAAG,IAAI5B,GAAG,EAAE,CAAA;EAEnBuI,EAAAA,MAAM,CAACY,cAAc,CAAC9I,MAAM,EAAE7B,GAAG,EAAE;MAC/BmD,GAAG,EAAA,SAAAA,MAAG;QACF,IAAG3B,GAAG,CAACK,MAAM,EAAE;EACX;EACA;UACAuB,GAAG,CAACxB,MAAM,EAAE,CAAA;EACZ;EACA,QAAA,IAAGwJ,OAAO,EAAE;EACRA,UAAAA,OAAO,CAAChI,GAAG,CAACxB,MAAM,EAAE,CAAA;EACpB,UAAA,IAAG+D,KAAK,CAACkF,OAAO,CAAC7L,KAAK,CAAC,EAAE;cACrBkM,WAAW,CAAClM,KAAK,CAAC,CAAA;EACtB,WAAA;EACJ,SAAA;EACJ,OAAA;EACA,MAAA,OAAOA,KAAK,CAAA;OACf;MACDqM,GAAG,EAAA,SAAAA,GAACC,CAAAA,MAAM,EAAE;QACR,IAAGA,MAAM,KAAKtM,KAAK,EAAE,OAAA;EACrB;QACAkG,OAAO,CAACoG,MAAM,CAAC,CAAA;EACftM,MAAAA,KAAK,GAAGsM,MAAM,CAAA;;EAEd;QACAlI,GAAG,CAACnB,MAAM,EAAE,CAAA;EAChB,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEO,SAASiD,OAAOA,CAACM,IAAI,EAAE;EAC1B;IACA,IAAGgE,OAAA,CAAOhE,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,IAAI,IAAI,EAAE;EACzC,IAAA,OAAA;EACJ,GAAA;;EAEA;EACA,EAAA,IAAGA,IAAI,CAACgF,MAAM,YAAYE,QAAQ,EAAE;MAChC,OAAOlF,IAAI,CAACgF,MAAM,CAAA;EACtB,GAAA;EAEA,EAAA,OAAO,IAAIE,QAAQ,CAAClF,IAAI,CAAC,CAAA;EAC7B;;ECpGO,SAAS+F,SAASA,CAACjJ,EAAE,EAAE;EAC1B,EAAA,IAAMkJ,IAAI,GAAGlJ,EAAE,CAACoH,QAAQ,CAAC;IACzB,IAAG8B,IAAI,CAAChG,IAAI,EAAE;MACViG,QAAQ,CAACnJ,EAAE,CAAC,CAAA;EAChB,GAAA;IACA,IAAGkJ,IAAI,CAACE,QAAQ,EAAE;MACdC,YAAY,CAACrJ,EAAE,CAAC,CAAA;EACpB,GAAA;IACA,IAAGkJ,IAAI,CAACI,KAAK,EAAE;MACXC,SAAS,CAACvJ,EAAE,CAAC,CAAA;EACjB,GAAA;EACJ,CAAA;EAGA,SAASwJ,KAAKA,CAACxJ,EAAE,EAAET,MAAM,EAAE7B,GAAG,EAAE;EAC5B+J,EAAAA,MAAM,CAACY,cAAc,CAACrI,EAAE,EAAEtC,GAAG,EAAE;MAC3BmD,GAAG,EAAA,SAAAA,MAAG;EACF,MAAA,OAAOb,EAAE,CAACT,MAAM,CAAC,CAAC7B,GAAG,CAAC,CAAA;OACzB;MACDqL,GAAG,EAAA,SAAAA,GAACvH,CAAAA,QAAQ,EAAE;EACVxB,MAAAA,EAAE,CAACT,MAAM,CAAC,CAAC7B,GAAG,CAAC,GAAG8D,QAAQ,CAAA;EAC9B,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEA,SAAS2H,QAAQA,CAACnJ,EAAE,EAAE;EAClB,EAAA,IAAIkD,IAAI,GAAGlD,EAAE,CAACoH,QAAQ,CAAClE,IAAI,CAAA;EAC3B;EACAA,EAAAA,IAAI,GAAG,OAAOA,IAAI,KAAK,UAAU,GAAGA,IAAI,CAAChC,IAAI,CAAClB,EAAE,CAAC,GAAGkD,IAAI,CAAA;;EAExD;IACAlD,EAAE,CAACyJ,KAAK,GAAGvG,IAAI,CAAA;EACf;IACAN,OAAO,CAACM,IAAI,CAAC,CAAA;;EAEb;EACA,EAAA,KAAI,IAAIxF,GAAG,IAAIwF,IAAI,EAAE;EACjBsG,IAAAA,KAAK,CAACxJ,EAAE,EAAE,OAAO,EAAEtC,GAAG,CAAC,CAAA;EAC3B,GAAA;EACJ,CAAA;EAEA,SAAS2L,YAAYA,CAACrJ,EAAE,EAAE;EACtB,EAAA,IAAMoJ,QAAQ,GAAGpJ,EAAE,CAACoH,QAAQ,CAACgC,QAAQ,CAAA;EACrC;EACA,EAAA,IAAMM,QAAQ,GAAG1J,EAAE,CAAC2J,iBAAiB,GAAG,EAAE,CAAA;EAC1C,EAAA,KAAI,IAAIjM,GAAG,IAAI0L,QAAQ,EAAE;EACrB,IAAA,IAAIQ,OAAO,GAAGR,QAAQ,CAAC1L,GAAG,CAAC,CAAA;EAC3B;MACA,IAAImM,EAAE,GAAG,OAAOD,OAAO,KAAK,UAAU,GAAGA,OAAO,GAAGA,OAAO,CAAC/I,GAAG,CAAA;;EAE9D;MACA6I,QAAQ,CAAChM,GAAG,CAAC,GAAG,IAAIqC,OAAO,CAACC,EAAE,EAAE6J,EAAE,EAAE;EAAEpJ,MAAAA,IAAI,EAAE,IAAA;EAAK,KAAC,CAAC,CAAA;EAEnDqJ,IAAAA,cAAc,CAAC9J,EAAE,EAAEtC,GAAG,EAAEkM,OAAO,CAAC,CAAA;EACpC,GAAA;EACJ,CAAA;EACA,SAASE,cAAcA,CAACvK,MAAM,EAAE7B,GAAG,EAAEkM,OAAO,EAAE;IAC1C,IAAMG,MAAM,GAAGH,OAAO,CAACb,GAAG,IAAK,YAAM,EAAG,CAAA;EACxC;EACAtB,EAAAA,MAAM,CAACY,cAAc,CAAC9I,MAAM,EAAE7B,GAAG,EAAE;EAC/BmD,IAAAA,GAAG,EAAEmJ,oBAAoB,CAACtM,GAAG,CAAC;EAC9BqL,IAAAA,GAAG,EAAEgB,MAAAA;EACT,GAAC,CAAC,CAAA;EACN,CAAA;;EAEA;EACA,SAASC,oBAAoBA,CAACtM,GAAG,EAAE;EAC/B;EACA,EAAA,OAAO,YAAW;EACd;EACA,IAAA,IAAMgC,OAAO,GAAG,IAAI,CAACiK,iBAAiB,CAACjM,GAAG,CAAC,CAAA;MAC3C,IAAGgC,OAAO,CAACgB,KAAK,EAAE;EACd;EACA;QACAhB,OAAO,CAACuB,QAAQ,EAAE,CAAA;EACtB,KAAA;EACA;EACA;EACA;MACA,IAAG/B,GAAG,CAACK,MAAM,EAAE;QACXG,OAAO,CAACJ,MAAM,EAAE,CAAA;EACpB,KAAA;MACA,OAAOI,OAAO,CAAChD,KAAK,CAAA;KACvB,CAAA;EACL,CAAA;EAEA,SAAS6M,SAASA,CAACvJ,EAAE,EAAE;EACnB,EAAA,IAAMsJ,KAAK,GAAGtJ,EAAE,CAACoH,QAAQ,CAACkC,KAAK,CAAA;EAC/B,EAAA,KAAI,IAAI5L,GAAG,IAAI4L,KAAK,EAAE;EAClB;EACA,IAAA,IAAMW,OAAO,GAAGX,KAAK,CAAC5L,GAAG,CAAC,CAAA;EAC1B,IAAA,IAAG2F,KAAK,CAACkF,OAAO,CAAC0B,OAAO,CAAC,EAAE;EACvB,MAAA,KAAI,IAAI/M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+M,OAAO,CAAChO,MAAM,EAAEiB,CAAC,EAAE,EAAE;UACpCgN,aAAa,CAAClK,EAAE,EAAEtC,GAAG,EAAEuM,OAAO,CAAC/M,CAAC,CAAC,CAAC,CAAA;EACtC,OAAA;EACJ,KAAC,MAAM;EACHgN,MAAAA,aAAa,CAAClK,EAAE,EAAEtC,GAAG,EAAEuM,OAAO,CAAC,CAAA;EACnC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEA,SAASC,aAAaA,CAAClK,EAAE,EAAEtC,GAAG,EAAEuM,OAAO,EAAE;EACrC;EACA,EAAA,IAAG,OAAOA,OAAO,KAAK,QAAQ,EAAE;EAC5B;EACAA,IAAAA,OAAO,GAAGjK,EAAE,CAACiK,OAAO,CAAC,CAAA;EACzB,GAAA;EACA,EAAA,OAAOjK,EAAE,CAACmK,MAAM,CAACzM,GAAG,EAAEuM,OAAO,CAAC,CAAA;EAClC,CAAA;EAEO,SAASG,cAAcA,CAAC1D,GAAG,EAAE;EAChCA,EAAAA,GAAG,CAACC,SAAS,CAAC0D,SAAS,GAAGvI,QAAQ,CAAA;;EAElC;IACA4E,GAAG,CAACC,SAAS,CAACwD,MAAM,GAAG,UAASlK,QAAQ,EAAEE,EAAE,EAAE;EAC1C;EACA;EACA,IAAA,IAAIJ,OAAO,CAAC,IAAI,EAAEE,QAAQ,EAAE;EAAEU,MAAAA,IAAI,EAAE,IAAA;OAAM,EAAER,EAAE,CAAC,CAAA;KAClD,CAAA;EACL;;ECvHO,SAASmK,SAASA,CAAC5D,GAAG,EAAE;EAAE;EAC7BA,EAAAA,GAAG,CAACC,SAAS,CAAC4D,KAAK,GAAG,UAASrK,OAAO,EAAE;EAAE;EACtC;MACA,IAAMF,EAAE,GAAG,IAAI,CAAA;MAEfA,EAAE,CAACoH,QAAQ,GAAGlH,OAAO,CAAA;;EAErB;MACA+I,SAAS,CAACjJ,EAAE,CAAC,CAAA;;EAEb;MACA,IAAGE,OAAO,CAAC2D,EAAE,EAAE;EACX7D,MAAAA,EAAE,CAACwK,MAAM,CAACtK,OAAO,CAAC2D,EAAE,CAAC,CAAA;EACzB,KAAA;KACH,CAAA;EAED6C,EAAAA,GAAG,CAACC,SAAS,CAAC6D,MAAM,GAAG,UAAS3G,EAAE,EAAE;MAChC,IAAM7D,EAAE,GAAG,IAAI,CAAA;EACf6D,IAAAA,EAAE,GAAGnB,QAAQ,CAAC+H,aAAa,CAAC5G,EAAE,CAAC,CAAA;EAC/B,IAAA,IAAI6G,GAAG,GAAG1K,EAAE,CAACoH,QAAQ,CAAA;EACrB;EACA,IAAA,IAAG,CAACsD,GAAG,CAAC3L,MAAM,EAAE;EACZ;EACA,MAAA,IAAID,QAAQ,CAAA;EACZ;EACA,MAAA,IAAG,CAAC4L,GAAG,CAAC5L,QAAQ,IAAI+E,EAAE,EAAE;UACpB/E,QAAQ,GAAG+E,EAAE,CAAC8G,SAAS,CAAA;EAC3B,OAAC,MAAM;EACH;EACA,QAAA,IAAG9G,EAAE,EAAE;YACH/E,QAAQ,GAAG4L,GAAG,CAAC5L,QAAQ,CAAA;EAC3B,SAAA;EACJ,OAAA;EACA;EACA,MAAA,IAAGA,QAAQ,EAAE;EACT,QAAA,IAAMC,MAAM,GAAGF,iBAAiB,CAACC,QAAQ,CAAC,CAAA;EAC1C;UACA4L,GAAG,CAAC3L,MAAM,GAAGA,MAAM,CAAA;EACvB,OAAA;EACJ,KAAA;EACA;EACAsI,IAAAA,cAAc,CAACrH,EAAE,EAAE6D,EAAE,CAAC,CAAA;;EAEtB;EACA;EACA;EACA;KACH,CAAA;EACL;;EC9CA;EACA,SAAS6C,GAAGA,CAACxG,OAAO,EAAE;EAClB,EAAA,IAAI,CAACqK,KAAK,CAACrK,OAAO,CAAC,CAAA;EACvB,CAAA;;EAEC;EACDoK,SAAS,CAAC5D,GAAG,CAAC,CAAA;EACdD,aAAa,CAACC,GAAG,CAAC,CAAA;EAClB;EACA0D,cAAc,CAAC1D,GAAG,CAAC,CAAA;;EAEnB;EACA,IAAIkE,OAAO,GAAG/L,iBAAiB,CAAA,mJAKzB,CAAC,CAAA;EACP,IAAIgM,GAAG,GAAG,IAAInE,GAAG,CAAC;EAAExD,EAAAA,IAAI,EAAE;EAAEzG,IAAAA,IAAI,EAAE,IAAA;EAAK,GAAA;EAAE,CAAC,CAAC,CAAA;EAC3C,IAAIqO,SAAS,GAAGF,OAAO,CAAC1J,IAAI,CAAC2J,GAAG,CAAC,CAAA;EAEjC,IAAIhH,EAAE,GAAGS,SAAS,CAACwG,SAAS,CAAC,CAAA;EAC7BpI,QAAQ,CAACqI,IAAI,CAACtG,WAAW,CAACZ,EAAE,CAAC,CAAA;EAG7B,IAAImH,OAAO,GAAGnM,iBAAiB,CAAA,wMAOzB,CAAC,CAAA;EACP,IAAIoM,GAAG,GAAG,IAAIvE,GAAG,CAAC;EAAExD,EAAAA,IAAI,EAAE;EAAEzG,IAAAA,IAAI,EAAE,IAAA;EAAK,GAAA;EAAE,CAAC,CAAC,CAAA;EAC3C,IAAIyO,SAAS,GAAGF,OAAO,CAAC9J,IAAI,CAAC+J,GAAG,CAAC,CAAA;EAEjCjI,UAAU,CAAC,YAAM;EACb0B,EAAAA,KAAK,CAACoG,SAAS,EAAEI,SAAS,CAAC,CAAA;EAC/B,CAAC,EAAE,IAAI,CAAC;;;;;;;;"}