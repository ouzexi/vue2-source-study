{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/init.js","../src/index.js"],"sourcesContent":["// 保留数组的原型\r\nlet oldArrayProto = Array.prototype;\r\n// 以数组的原型作为原型创建新的原型对象（newArrayProto.__proto__ = oldArrayProto），\r\n// 这样重写的方法只会存在newArrayProto上，不会污染oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\n// 需重写的7个变异方法\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'];\r\nmethods.forEach(method => {\r\n    // 重写的方法挂载到newArrayProto上\r\n    newArrayProto[method] = function(...args) {\r\n        // 内部调用原来的方法，面向切片编程\r\n        // 如 arr.push(1, 2, 3)，this为arr，args为[1, 2, 3]\r\n        const result = oldArrayProto[method].call(this, ...args);\r\n\r\n        // 获取数组新增的数据\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                // 如新增元素时，只需获取第2个下标后的数据：arr.splice(0, 1, {a: 1}, {b: 2})\r\n                inserted = args.slice(2);\r\n                console.log(inserted[0] === args[2])\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // 对新增的数据再次进行劫持\r\n        if(inserted) {\r\n            ob.observeArray(inserted);\r\n        }\r\n\r\n        return result;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\n\r\nclass Observer {\r\n    // Object.defineProperty只能劫持已经存在的属性（vue里面会为此单独写一些api $set $delete）\r\n    constructor(data) {\r\n        // 需要给对象添加一个__ob__属性，赋值为this，有2个作用\r\n        // 1、数组对新增的数据再次进行劫持，需要调用this的observeArray方法\r\n        // 2、如果一个对象存在Observer类型的__ob__属性，说明被劫持过了，就不需要再被劫持了\r\n        // 另外，需要设置__ob__属性为不可枚举，否则遍历到__ob__属性为一个对象，会被调用observe方法劫持，又给它本身挂载一个__ob__属性，死循环。\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        });\r\n        \r\n        if(Array.isArray(data)) {\r\n            // 数组项一旦多了，每个项都劫持对性能不好，所以重写数组中7个变异方法，是可以修改数组本身\r\n            \r\n            // 需要保留数组原有的特性，并且重写部分方法\r\n            data.__proto__ = newArrayProto;\r\n            // 如果数组中存在属性是对象，可以监听到对象的变化\r\n            this.observeArray(data);\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n    }\r\n\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    // 属性的属性也可能是对象，需要递归劫持\r\n    observe(value);\r\n    // 这里的value相当于全局的闭包，let value = null\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            console.log('获取值')\r\n            return value\r\n        },\r\n        set(newVal) {\r\n            console.log('设置值')\r\n            // 如果设置的新值是对象的话，也要进行劫持后再赋值\r\n            observe(newVal)\r\n            if(newVal === value) return\r\n            value = newVal\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 只对对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例判断是否被劫持过）\r\n    if(data.__ob__ instanceof Observer) {\r\n        return data.__ob__;\r\n    }\r\n    \r\n    return new Observer(data)\r\n}","import { observe } from './observe/index'\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function(options) { // 用于初始化操作\r\n        // vm.$options 就是获取用户的配置$nextTick $data $attr ...\r\n        const vm = this;\r\n        \r\n        vm.$options = options;\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n    }\r\n}\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if(opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // data可能是函数或者对象\r\n    data = typeof data === 'function' ? data.call(vm) : data;\r\n    \r\n    // 将返回的对象放到了vue实例的_data属性上\r\n    vm._data = data\r\n    // 对数据进行劫持，vue采用了defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data用vm代理就无须通过vm._data.xxx获取，而是vm.xxx直接获取\r\n    for(let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}","import { initMixin } from \"./init\";\r\n\r\n// Vue构造函数\r\nfunction Vue(options) {\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue); // 扩展了init方法\r\n\r\nexport default Vue;"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","console","log","observeArray","Observer","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newVal","_typeof","initMixin","Vue","_init","options","vm","$options","initState","opts","initData","proxy","newValue","_data"],"mappings":"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"}