{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 匹配到的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性 第一个分组就是属性的key value 就是 分组3/分组4/分组5\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 开始标签的结束位置 <div attrs='xxx'> <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n// vue3采用的不是正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    // 存放元素的栈\r\n    const stack = [];\r\n    // 指向栈中最后一个元素\r\n    let currentParent;\r\n    // 根节点\r\n    let root;\r\n\r\n    // 最终需要转化成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        // 创建一个ast节点\r\n        let node = createASTElement(tag, attrs);\r\n        // 如果为空树，则当前节点为树的根节点\r\n        if(!root) {\r\n            root = node;\r\n        }\r\n        // 当前节点的父节点为栈中最后一个节点\r\n        if(currentParent) {\r\n            // 设置当前节点的父节点\r\n            node.parent = currentParent;\r\n            // 同时设置当前节点的父节点的子节点为自身\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        // currentParent指向栈中最后一个\r\n        currentParent = node;\r\n    }\r\n\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '');\r\n        // 文本直接作为当前指向的节点的子元素\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        });\r\n    }\r\n\r\n    function end(tag) {\r\n        // 弹出最后一个（检验标签是否合法-待完成）\r\n        // 此时该节点包括它的子节点的ast树已构造完毕\r\n        let node = stack.pop();\r\n        // 指向该节点的父元素 继续构造\r\n        currentParent = stack[stack.length - 1];\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if(start) {\r\n            const match = {\r\n                // match第一个分组是标签名\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // 匹配到的字符舍弃 继续前进遍历html模板\r\n            advance(start[0].length);\r\n\r\n            // 如果不是开始标签的结束位置 就一直匹配 获取属性<div attr='xxx' />\r\n            let attr, end;\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\r\n            }\r\n            // 前进到结束闭合 > 符号，说明这一个标签上部分已经匹配完 如<div attr='x'>已匹配完 </div>未匹配\r\n            if(end) {\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n        // 否则不是开始标签\r\n        return false;\r\n    }\r\n\r\n    // html最开始肯定是一个<\r\n    while(html) {\r\n        // 如果textEnd为0 则说明是个开始或者自闭合结束标签 <div> / <div />\r\n        // 如果textEnd > 0 则说明是文本的结束位置 </div>\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd === 0) {\r\n            // 开始标签的匹配结果\r\n            const startTagMatch = parseStartTag();\r\n            if(startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            // 结束标签的匹配结果\r\n            const endTagMatch = html.match(endTag)\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        if(textEnd > 0) {\r\n            // console.log(html)\r\n            // 文本内容\r\n            let text = html.substring(0, textEnd);\r\n            if(text) {\r\n                chars(text);\r\n                // 解析完文本后继续前进\r\n                advance(text.length)\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    // {name: value}\r\n    let str = '';\r\n    for(let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if(attr.name === 'style') {\r\n            // color: red; background: red; => { color: 'red', background: 'red' }\r\n            let obj = {};\r\n            // qs库也可以实现\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        // id: 'app', style: '{color: 'red'}, '\r\n        str += `${attr.name}: ${JSON.stringify(attr.value)},`\r\n    }\r\n    // 删除最后一个逗号 {id: 'app', style: '{color: 'red'}}\r\n    return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\n// {{ name }} 匹配到的内容就是表达式的变量\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nfunction gen(node) {\r\n    // 元素节点\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本节点\r\n        let text = node.text;\r\n        if(!defaultTagRE.test(text)) {\r\n            // 普通文本 返回_v('str')\r\n            return `_v(${JSON.stringify(text)})`;\r\n        } else {\r\n            // 变量 返回 _v(_s(name) + 'hello' + _s(age))\r\n            // 存放字符的数组[{{name}}, 'hello', {{age}}]\r\n            let tokens = [];\r\n            // 每次匹配到的字符\r\n            let match;\r\n            // 如果 regexp.exec 匹配成功，lastIndex会被设置为紧随最近一次成功匹配的下一个位置，所以每次匹配要重置为0\r\n            defaultTagRE.lastIndex = 0;\r\n            // 最后一次匹配成功的下标\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)) {\r\n                // {{name}} hello {{age}} hello \r\n                // 匹配到的下标\r\n                let index = match.index;\r\n                if(index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n                }\r\n                // match[0] -> {{name}} / match[1] -> name\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            // 匹配完后，还可能存在普通字符\r\n            if(lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join('+')})`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children ? children.map(child => gen(child)).join(',') : '';\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    // console.log(\"🚀 ~ file: index.js:73 ~ codegen ~ children:\", children)\r\n    // _c('div', {id: 'app'}, _v(_s(name) + 'hello'))\r\n    let code = (`_c('${ast.tag}', ${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `, ${children}` : ''})`);\r\n    return code;\r\n}\r\n\r\n// 对模板进行编译处理\r\nexport function compileToFunction(template) {\r\n    // 1、将template转化成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 2、生成render方法（render方法执行后的返回的结果就是虚拟DOM）\r\n    let code = codegen(ast);\r\n    \r\n    // 将this指向当前实例vm 就可以访问当前实例的name、age\r\n    code = `with(this) {return ${code}}`;\r\n    let render = new Function(code);\r\n    // 生成render函数\r\n    return render;\r\n}","// 每个属性对应一个id\r\n// 一个属性对象多个watcher（视图） 因为一个属性可以在多个组件存在\r\nlet id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        // 属性的dep要收集watcher\r\n        this.id = id++;\r\n        // 存放当前属性对应的watcher有哪些\r\n        this.subs = [];\r\n    }\r\n\r\n    // dep和watcher是多对多关系\r\n    // 一个属性可以在多个组件中使用 - 一个dep对应多个watcher\r\n    // 一个组件存在多个属性 - 一个watcher对应多个dep\r\n    // 所以建立双向关系 dep调用depend时当前watcher（组件/视图）会把这个dep存起来\r\n    // 同时这个dep会调用addSub把当前watcher也存起来\r\n    depend() {\r\n        Dep.target.addDep(this);\r\n    }\r\n\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n\r\n    // 属性修改时，会通知使用到这个属性的视图进行更新操作\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update());\r\n    }\r\n}\r\n\r\nDep.target = null;\r\n\r\nexport default Dep;","// 一个视图（组件）对应一个watcher\r\n\r\nimport Dep from \"./dep\";\r\n\r\n/* \r\n    1）当创建渲染watcher时会把当前渲染的watcher对象赋值到Dep.target上\r\n    2）调用_render会取值 走到get上\r\n    每个属性有一个dep（属性就是被观察者），watcher就是观察者（属性变化后会通知观察者更新） --- 观察者模式\r\n*/\r\n\r\nlet id = 0;\r\nclass Watcher {\r\n    constructor(vm, fn, options) {\r\n        this.id = id++;\r\n        // 表示是一个渲染watcher\r\n        this.renderWatcher = options;\r\n        // 表示调用这个函数可以发生取值操作\r\n        this.getter = fn;\r\n        // 实现计算属性和进行一些清理工作需要用到\r\n        this.deps = [];\r\n        // 每个属性的dep对应一个depId，避免重复收集\r\n        this.depsId = new Set();\r\n        this.get();\r\n    }\r\n\r\n    addDep(dep) {\r\n        // 一个组件对应多个属性 重复的属性不用记录 比如 <div>{{name}} {{age}} {{name}} {{name}}</div>\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            // watcher已经记住dep并且去重了，此时让dep也记住watcher\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n\r\n    get() {\r\n        // 将收集器的目标设置为当前视图\r\n        Dep.target = this;\r\n        // 调用getter即vm._update(vm._render)会调用render方法生成虚拟dom\r\n        // render方法会在vm上取值如vm.name vm.age\r\n        // 此时触发属性的dep收集依赖\r\n        this.getter();\r\n        // render渲染完毕后重置\r\n        Dep.target = null;\r\n    }\r\n\r\n    update() {\r\n        console.log('update...')\r\n        // 当前视图多个属性多次改变时，update会触发多次\r\n        // 把当前的watcher暂存起来 实现批量刷新 这样update无论触发多少次 视图更新只调用一次\r\n        queueWatcher(this);\r\n    }\r\n\r\n    run() {\r\n        // 渲染时使用最新的vm来渲染\r\n        // 比如vm.name = 20; vm = name = 12; name多次赋值后，取的是最后一次\r\n        this.get();\r\n    }\r\n}\r\n\r\n// 记录需要更新的watcher（视图/组件）\r\nlet queue = [];\r\n// 记录当前视图是否已存在于更新队列 去重\r\nlet has = {};\r\n// 防抖\r\nlet pending = false;\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    // 重置\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n    // 在执行的过程中可能还有新的watcher 重新放到queue中\r\n    flushQueue.forEach(q => q.run());\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if(!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 批量执行更新 不管update执行多少次 最终只执行一轮刷新操作（是第一次开启的）\r\n        if(!pending) {\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\n// nextTick收集的回调函数队列\r\nlet callbacks = [];\r\n// 只在第一次触发nextTick开启 就能保证只开启一次异步操作 队列执行完后重置\r\nlet waiting = false;\r\n// 批量执行\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0);\r\n    // 重置\r\n    waiting = false;\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb());\r\n}\r\n\r\n// nextTick采用优雅降级的方式\r\nlet timerFunc;\r\nif(Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks);\r\n    }\r\n} else if(MutationObserver) {\r\n    // 传入的回调函数是异步执行的\r\n    let observer = new MutationObserver(flushCallbacks);\r\n    let textNode = document.createTextNode(1);\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    });\r\n    timerFunc = () => {\r\n        // 元素变化会执行MutationObserver回调\r\n        textNode.textContent = 2;\r\n    }\r\n} else if(setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks);\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks);\r\n    }\r\n}\r\n\r\n// 批量执行，一般是用一个waiting变量控制，第一次触发开启一个异步事件，之后收集全部函数，同步代码执行完后，最后异步批量执行\r\n// 注意：nextTick不是异步的，他只是收集回调队列，开启异步执行队列\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb);\r\n    if(!waiting) {\r\n        timerFunc();\r\n        waiting = true;\r\n    }\r\n}\r\n\r\nexport default Watcher;","// _h() _c() 传入实例 标签名 标签属性 子节点\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if(data == null) data = {};\r\n    let key = data.key;\r\n    if(key) {\r\n        delete data.key;\r\n    }\r\n    return vnode(vm, tag, key, data, children);\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// ast是语法层面的转化 描述的是语法本身 可以描述js css html\r\n// 虚拟dom描述的是dom元素 可以为dom增加一些自定义属性\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom/index\";\r\n\r\nfunction patchProps(el, props) {\r\n    for(let key in props) {\r\n        if(key === 'style') {\r\n            for(let styleName in props['style']) {\r\n                el.style[styleName] = props['style'][styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    // 标签元素\r\n    if(typeof tag === 'string') {\r\n        // vnode增加el属性，将虚拟dom和真实dom对应起来，方便后续修改props属性\r\n        vnode.el = document.createElement(tag);\r\n        patchProps(vnode.el, data);\r\n        children.forEach(child => {\r\n            const childElm = createElm(child);\r\n            vnode.el.appendChild(childElm);\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\n// 初始化的时候，oldVNode是真实dom 更新时是上一次虚拟DOM\r\nfunction patch(oldVNode, vnode) {\r\n    // nodeType是dom元素原生属性\r\n    const isRealElement = oldVNode.nodeType;\r\n    if(isRealElement) {\r\n        // 获取真实dom\r\n        const elm = oldVNode;\r\n        // 获取父元素\r\n        const parentElm = elm.parentNode;\r\n        // 根据虚拟dom创建真实dom\r\n        let newElm = createElm(vnode);\r\n        // 插入到原节点的相邻节点\r\n        parentElm.insertBefore(newElm, elm.nextSibling);\r\n        // 移除原节点\r\n        parentElm.removeChild(elm);\r\n\r\n        return newElm;\r\n    } else {\r\n        // diff算法\r\n    }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function(vnode) {\r\n        const vm = this;\r\n        const el = vm.$el;\r\n        // patch既有初始化的功能 又有更新的功能\r\n        vm.$el = patch(el, vnode);\r\n    }\r\n\r\n    // _c('div', {}, ...children)\r\n    Vue.prototype._c = function() {\r\n        return createElementVNode(this, ...arguments);\r\n    }\r\n\r\n    // _v(text)\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this, ...arguments);\r\n    }\r\n\r\n    Vue.prototype._s = function(value) {\r\n        if(typeof value !== 'object') return value;\r\n        return JSON.stringify(value);\r\n    }\r\n\r\n    Vue.prototype._render = function() {\r\n        // 当渲染时会去实例中取值，可以将属性和视图绑定\r\n        const vm = this;\r\n        // 执行render方法，生成虚拟DOM\r\n        return vm.$options.render.call(this);\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    // $el为querySelector获取的真实DOM\r\n    vm.$el = el;\r\n    // 1、调用render方法生成虚拟节点 虚拟DOM\r\n    const updateComponent = () => {\r\n        vm._update(vm._render());\r\n    }\r\n    const watcher = new Watcher(vm, updateComponent, true);\r\n    // 2、根据虚拟DOM生成真实DOM\r\n    // 3、插入到el元素中\r\n}\r\n\r\n// vue核心 \r\n// 1）创造了响应式数据\r\n// 2）模板转换成ast语法树\r\n// 3）将ast语法树转换成render函数\r\n// 4）后续每次更新可以只执行render函数（无需再执行ast转化的过程）","// 保留数组的原型\r\nlet oldArrayProto = Array.prototype;\r\n// 以数组的原型作为原型创建新的原型对象（newArrayProto.__proto__ = oldArrayProto），\r\n// 这样重写的方法只会存在newArrayProto上，不会污染oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\n// 需重写的7个变异方法\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'];\r\nmethods.forEach(method => {\r\n    // 重写的方法挂载到newArrayProto上\r\n    newArrayProto[method] = function(...args) {\r\n        // 内部调用原来的方法，面向切片编程\r\n        // 如 arr.push(1, 2, 3)，this为arr，args为[1, 2, 3]\r\n        const result = oldArrayProto[method].call(this, ...args);\r\n\r\n        // 获取数组新增的数据\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                // 如新增元素时，只需获取第2个下标后的数据：arr.splice(0, 1, {a: 1}, {b: 2})\r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // 对新增的数据再次进行劫持\r\n        if(inserted) {\r\n            ob.observeArray(inserted);\r\n        }\r\n\r\n        // 数组本身变化 通知对应的watcher更新视图\r\n        ob.dep.notify();\r\n\r\n        return result;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observer {\r\n    // Object.defineProperty只能劫持已经存在的属性（vue里面会为此单独写一些api $set $delete）\r\n    constructor(data) {\r\n\r\n        // 给每个对象（对象包括数组）增加收集功能 这样当实例的属性为数组/对象时，对应的数组/对象也会收集依赖\r\n        // 比如vm.arr = [1, 2, 3]，此时vm.arr = [4, 5]会触发视图更新，但是vm.arr.push(6)不会触发更新\r\n        // 因为vm.arr对应的这个数组本身没有收集依赖，所以现在要加上dep收集依赖，在调用7个变异方法后调用notify通知视图更新\r\n        // 同样地，vm.obj = {a: 1} -> vm.obj.b = 2 obj对应的对象本身也需要收集依赖，但是新增b属性时不会触发更新\r\n        // 因为没有调用notify通知更新，可以使用$set更新\r\n        this.dep = new Dep();\r\n\r\n        // 需要给对象添加一个__ob__属性，赋值为this，有2个作用\r\n        // 1、数组对新增的数据再次进行劫持，需要调用this的observeArray方法\r\n        // 2、如果一个对象存在Observer类型的__ob__属性，说明被劫持过了，就不需要再被劫持了\r\n        // 另外，需要设置__ob__属性为不可枚举，否则遍历到__ob__属性为一个对象，会被调用observe方法劫持，又给它本身挂载一个__ob__属性，死循环。\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        });\r\n        \r\n        if(Array.isArray(data)) {\r\n            // 数组项一旦多了，每个项都劫持对性能不好，所以重写数组中7个变异方法，是可以修改数组本身\r\n            \r\n            // 需要保留数组原有的特性，并且重写部分方法\r\n            data.__proto__ = newArrayProto;\r\n            // 如果数组中存在属性是对象，可以监听到对象的变化\r\n            this.observeArray(data);\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n    }\r\n\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\n// 对象的属性或数组的项也可能是对象/数组，深层次嵌套递归使对象/数组本身收集依赖，使其改变时可以调用notify更新视图\r\nfunction dependArray(value) {\r\n    for(let i = 0; i < value.length; i++) {\r\n        let current = value[i];\r\n        console.log(\"🚀 ~ file: index.js:50 ~ dependArray ~ current:\", current)\r\n        current.__ob__ && current.__ob__.dep.depend();\r\n        if(Array.isArray(current)) {\r\n            dependArray(current);\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    // 属性的属性也可能是对象，需要递归劫持\r\n    let childOb = observe(value);\r\n    // 这里的value相当于全局的闭包，let value = null\r\n\r\n    // 每个属性都有一个Dep对象\r\n    let dep = new Dep();\r\n\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            if(Dep.target) {\r\n                // 让这个属性的收集器dep记住当前的watcher\r\n                // 同时当前的watcher会记住这个属性的收集器\r\n                dep.depend();\r\n                // 同样地，属性的属性如果是对象/数组的话，本身也要实现依赖收集\r\n                if(childOb) {\r\n                    console.log(\"🚀 ~ file: index.js:63 ~ get ~ value:\", value)\r\n                    debugger\r\n                    childOb.dep.depend();\r\n                    if(Array.isArray(value)) {\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newVal) {\r\n            if(newVal === value) return\r\n            // 如果设置的新值是对象的话，也要进行劫持后再赋值\r\n            observe(newVal)\r\n            value = newVal\r\n\r\n            // 属性变化，通知视图更新\r\n            dep.notify();\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 只对对象进行劫持\r\n    if(typeof data !== 'object' || data == null) {\r\n        return\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例判断是否被劫持过）\r\n    if(data.__ob__ instanceof Observer) {\r\n        return data.__ob__;\r\n    }\r\n    \r\n    return new Observer(data)\r\n}","import { compileToFunction } from './compiler/index.js';\r\nimport { mountComponent } from './lifecycle.js';\r\nimport { observe } from './observe/index'\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function(options) { // 用于初始化操作\r\n        // vm.$options 就是获取用户的配置$nextTick $data $attr ...\r\n        const vm = this;\r\n        \r\n        vm.$options = options;\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        // 实现数据挂载到元素\r\n        if(options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        // 先查找有无render函数\r\n        if(!ops.render) {\r\n            // 没有render函数，查找有无template\r\n            let template;\r\n            // 没有template模板，但是有el元素\r\n            if(!ops.template && el) {\r\n                template = el.outerHTML;\r\n            } else {\r\n                // 有template模板，使用template模板\r\n                if(el) {\r\n                    template = ops.template;\r\n                }\r\n            }\r\n            // 获取到template 需要对模板进行编译\r\n            if(template) {\r\n                const render = compileToFunction(template);\r\n                // 模板编译后转化成render函数 挂载到实例上\r\n                ops.render = render;\r\n            }\r\n        }\r\n        // 组件的挂载，将vm实例挂载到el上\r\n        mountComponent(vm, el)\r\n\r\n        // script标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n        // runtime 和 runtimeWithCompiler的区别就是多了一个compileToFunction步骤\r\n        // 所以runtime是不包含模板编译的 整个编译是打包通过vue-loader转义.vue文件\r\n        // 所以使用vue.runtime.js不能编译选项的template属性\r\n    }\r\n}\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if(opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // data可能是函数或者对象\r\n    data = typeof data === 'function' ? data.call(vm) : data;\r\n    \r\n    // 将返回的对象放到了vue实例的_data属性上\r\n    vm._data = data\r\n    // 对数据进行劫持，vue采用了defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data用vm代理就无须通过vm._data.xxx获取，而是vm.xxx直接获取\r\n    for(let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}","import { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { nextTick } from \"./observe/watcher\";\r\n\r\n// Vue构造函数\r\nfunction Vue(options) {\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue); // 扩展了init方法\r\ninitLifeCycle(Vue);\r\nVue.prototype.$nextTick = nextTick;\r\n\r\nexport default Vue;"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","Watcher","vm","fn","options","renderWatcher","getter","deps","depsId","Set","get","dep","has","add","console","log","queueWatcher","run","queue","pending","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","_len","arguments","Array","_key","vnode","createTextVNode","undefined","patchProps","el","props","styleName","style","setAttribute","createElm","createElement","childElm","appendChild","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_update","$el","_c","apply","call","_v","_s","_typeof","_render","$options","mountComponent","updateComponent","oldArrayProto","newArrayProto","Object","create","methods","method","_oldArrayProto$method","args","result","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","current","childOb","set","newVal","initMixin","_init","initState","$mount","querySelector","ops","outerHTML","opts","initData","proxy","newValue","_data","$nextTick"],"mappings":"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"}